{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d1b2c8fd",
   "metadata": {
    "papermill": {
     "duration": 0.009869,
     "end_time": "2022-05-19T07:39:17.321181",
     "exception": false,
     "start_time": "2022-05-19T07:39:17.311312",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 왜도와 첨도 구하기\n",
    "-  주어진 데이터 중 train.csv에서 'SalePrice'컬럼의 왜도와 첨도를 구한 값과, 'SalePrice'컬럼을 스케일링(log1p)로 변환한 이후 왜도와 첨도를 구해 모두 더한 다음 소수점 2째자리까지 출력하시오\n",
    "- 데이터셋 : House Prices - Advanced Regression Technique (https://www.kaggle.com/c/house-prices-advanced-regression-techniques)\n",
    "- 오른쪽 상단 copy&edit 클릭 -> 예상문제 풀이 시작\n",
    "- 강의 영상 : https://youtu.be/_ft7ZlDlk7c"
   ]
  },
  {
   "attachments": {
    "502821f9-762a-4f63-bd70-944b6e6a213c.png": {
     "image/png": "iVBORw0KGgoAAAANSUhEUgAAANgAAAEwCAIAAABaIijhAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAHXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBUaGUgR0lNUO9kJW4AAAtKSURBVHic7d1BaJv1H8fx75OENUvsnBIyVkVQR9PEi1eNh2pZdvPU7dAq3gUPgogbJLLDSreDyDS4edDD8NJIj2K7FQaSihev6xQcGmxJW6E2KUlc0ud/eP7m3+bfzqQz3afp+3UIT54n9flB3/s9Pu3zPHVc17UDxXGcAzdm/CO+qZDg28+dOY6zn7vDAbKvIQK7IURIIERIIERIIERIIERIIERIIERIIERIIERIIERIaA1xaWnprbfeikQifr//1KlTly9fbjQaza3T09OJRCIQCMTj8Vwut79DRU9zt6hWq0NDQ2bm8/lOnDjhfeDChQve1lu3bnlXLUQiEW/TzMyM24mW3QFN28r45ptvzOzo0aN37951Xffq1atedt7W1157zcwymYzruul02sxeffXVznZGiNjFtkNzuVx+4YUXXn/99cHBQTN75ZVXzKxUKplZo9HI5/NmNjY2Zmbj4+NmNj8/v/XADezdjnlubm4uLy97tb355puu6/7+++/e59fX113XXV9f994uLi62X/1uuwN2PmvOZrPRaPSrr75KJpOff/65mZXLZW9TOBw2s1Ao5L315ssHc/7WXH6IfzjoTTuH6PP9d30+n//oo49sy8XVe8ioWX1zeY+DRe/a9Z6VWq125cqVTCZz5MiRP/74o1wunzx50sxKpdJjjz32559/Hj9+3MwWFxe99W3tjPuesIttM+K33377wQcfXL9+3cz6+vree+89M/vrr7+KxWI0Gg0Gg2ZWKBSar8FgMBqNPoJRo+dsC/G33367fPnyu++++/3331erVe/HN0ePHn3qqad8Pl8ymTSzbDZbqVSy2ayZJZNJv9//SMaNXrP1zGVtbe3pp59u+UA6nfa2zszMbF3vOM6tW7c6OjMyzpqxi9Yyfvnll9HR0ePHj3u/x7t69Wqj0WhunZqaisViPp8vFot9/fXXHe+MELGLfT174GQFu+HqG0ggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREggREgIPOoBPDKO43T0ef7SdFcd3hDN7Pbt221+cnh4uIvjAIdmiCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESCBESGgNsV6vX7x48ZlnngkEAs8///yVK1c2NzebW6enpxOJRCAQiMfjuVxuf4eKXua0PPbv/Pnzk5OTZnbs2LH19XUzu3DhwqVLl8xsbm7u9OnTrutGIpHV1VUzm5mZSaVSHezMad3dI+Q4TkePpdMZeU/aNiPev3//008/NbNPPvlkbW3ts88+M7OPP/64VquZ2cTEhOu6mUxmZWUlnU6bmZcs8PC2TVH37t177rnnzKxcLofD4UqlEgqFzOznn39+9tlnw+FwrVZbWFiIxWJ3794dGhrq6+vb2Njw+/3t7owZEbvY9sTYJ5988saNG2YWDofNzDs0m1l/f3+xWPTmxYGBgeZrrVZbXl4+efLkg/ex9SHB3jLfVLTYFuLjjz/+xhtveMuu63744Ydm9vLLL584ceKnn37y1nuNejOlmZVKpX8MsZmd1IwIKTv/+Ob+/ftvv/329evXI5HIF198YVtmtU6fgQ60Y4cQi8XiyMjItWvXBgcH8/l8LBYzs/7+fm/rxsaGmZXLZe9tcz3wMFpDXFpaeumll7777rvTp0//8MMPg4OD3vpoNBoMBs2sUCg0X4PBYDQa3d8Boze1hvjOO+/cu3cvkUh8+eWX9Xp9dXV1dXW1Xq/7fL5kMmlm2Wy2Uqlks1kzSyaT7Z8yAw+w7eyhUqkcO3asXq+3fOjOnTtDQ0Ozs7Nnzpz531c6zs2bN0dGRjrYmdLJCj++kbJtRlxcXPz/CptSqdTU1FQsFvP5fLFYLJfLdVQh8AD7OkUxI2I3XH0DCYQICYQICYQICYQICYQICYQICYQICYQICYQICYF//sgBwRW7B1rvhGhm7f/u2MyGh4e7NQ50jkMzJBAiJBAiJBAiJBAiJBAiJBAiJBAiJBAiJBAiJBAiJBAiJBAiJBAiJPTUZWBd1en1jjyipCOE2C4uduwqDs2QQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQQIiQwF183dLR7afce0qI3dL+7afce2ocmiGCECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECGBECFh1xAzmYzjOAsLC1tXTk9PJxKJQCAQj8dzuVz3h4fDovXZN/V6/ddff71x48alS5daNs3NzY2OjrquG4lEFhYWzp07NzMzk0ql9muo6GWtM+KLL7546tSpixcvbm5utmyamJhwXTeTyaysrKTTaTObnJzcp2Gi17WGeOTIkb6+vr6+vpb1jUYjn8+b2djYmJmNj4+b2fz8fKPR2Jdxose1hvjjjz9Wq9Vqtdqyvlgs1mo1MxsYGGi+1mq15eXlfRknely7Z83lctlbCIfDZhYKhby3pVLpH7/W+VtzeS8jRU9r90GdzXr2kFHzcaiO4/BoVOyo3Rmxv7/fW9jY2LAtE2RzPfAw2g0xGo0Gg0EzKxQKzddgMBiNRrs3OBwe7Ybo8/mSyaSZZbPZSqWSzWbNLJlM+v3+Lo4Oh0YHv+J7//33zSybzYZCoWvXrjmOc/78+a4NDIdLByGmUqmpqalYLObz+WKxWC6XGxkZ6d7IcKjseta84+nt2bNnz549283x4JDi6htIIERIIERIIERIIERIIERIIERIIERIIERIIERIIERIIERIIERIIERIaPfmqUeC+/0OD+kQzez27dttfnJ4eLiL40CXcWiGBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBEKEBPWHMKHFHp6QtuPf91RDiAdP+09Is4PzkDQOzZBAiJBAiJBAiJBAiJBAiJDAj28k8PcTCFECfzyBQzMkECIkECIkECIkECIkECIkECIkECIkECIkECIkECIkECIkcNFD7+vepT3/4v2BhNj7Orq051FdB8ShGRIIERIIERIIERIIERIIERIIERIIERI6C3F6ejqRSAQCgXg8nsvlujQmHEIdhDg3Nzc6Onrnzp0nnnhiYWHh3Llzs7Oz3RsZDpUOQpyYmHBdN5PJrKyspNNpM5ucnOzawHC4tBtio9HI5/NmNjY2Zmbj4+NmNj8/32g0ujc4HB7thlgsFmu1mpkNDAw0X2u12vLycvcGhx7Q5rU/7YZYLpe9hXA4bGahUMh7WyqVOh8b0Krdy8CaXe/h4ratX+ItH4jn3GNfue1ZWlryPl8qlVzXXVtb894uLi62+V/w4msuALYlv3ZnxGg0GgwGq9VqoVCIx+OFQsHMgsFgNBrd2+738FU4iBzHaefb3e7/I/p8vmQyaWbZbLZSqWSzWTNLJpN+v/9hRgl42qrVMzs7e+bMmf99pePcvHlzZGSkg521948DveRfnhHNLJVKTU1NxWIxn88Xi8VyuVxHFQIPwBSF7vr3Z0Sge5gRIYEZERIIERIIERIIERIIERL+A+eRLvqKYAXVAAAAAElFTkSuQmCC"
    }
   },
   "cell_type": "markdown",
   "id": "cbc98a59",
   "metadata": {
    "papermill": {
     "duration": 0.008221,
     "end_time": "2022-05-19T07:39:17.338594",
     "exception": false,
     "start_time": "2022-05-19T07:39:17.330373",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 왜도\n",
    "비대칭도(非對稱度, skewness) 또는 왜도(歪度)는 **실수 값 확률 변수의 확률 분포 비대칭성을 나타내는 지표**이다. 왜도의 값은 양수나 음수가 될 수 있으며 정의되지 않을 수도 있다. 왜도가 음수일 경우에는 확률밀도함수의 왼쪽 부분에 긴 꼬리를 가지며 중앙값을 포함한 자료가 오른쪽에 더 많이 분포해 있다. 왜도가 양수일 때는 확률밀도함수의 오른쪽 부분에 긴 꼬리를 가지며 자료가 왼쪽에 더 많이 분포해 있다는 것을 나타낸다. 평균과 중앙값이 같으면 왜도는 0이 된다.\n",
    "\n",
    "![SkewedDistribution.png](attachment:502821f9-762a-4f63-bd70-944b6e6a213c.png)\n",
    "\n",
    "**위키백과 https://ko.wikipedia.org/wiki/%EB%B9%84%EB%8C%80%EC%B9%AD%EB%8F%84"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c087613a",
   "metadata": {
    "papermill": {
     "duration": 0.008394,
     "end_time": "2022-05-19T07:39:17.355652",
     "exception": false,
     "start_time": "2022-05-19T07:39:17.347258",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 첨도\n",
    "**확률분포의 꼬리가 두꺼운 정도**를 나타내는 척도이다. 극단적인 편차 또는 이상치가 많을 수록 큰 값을 나타낸다. 첨도값(K)이 3에 가까우면 산포도가 정규분포에 가깝다. 3보다 작을 경우에는(K<3) 산포는 정규분포보다 꼬리가 얇은 분포로 생각할 수 있다, 첨도값이 3보다 큰 양수이면(K>3) 정규분포보다 꼬리가 두꺼운 분포로 판단할 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "731589f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T07:39:17.377063Z",
     "iopub.status.busy": "2022-05-19T07:39:17.375904Z",
     "iopub.status.idle": "2022-05-19T07:39:17.465568Z",
     "shell.execute_reply": "2022-05-19T07:39:17.464884Z",
     "shell.execute_reply.started": "2022-05-19T07:37:07.967106Z"
    },
    "papermill": {
     "duration": 0.101548,
     "end_time": "2022-05-19T07:39:17.465819",
     "exception": false,
     "start_time": "2022-05-19T07:39:17.364271",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>MSSubClass</th>\n",
       "      <th>MSZoning</th>\n",
       "      <th>LotFrontage</th>\n",
       "      <th>LotArea</th>\n",
       "      <th>Street</th>\n",
       "      <th>Alley</th>\n",
       "      <th>LotShape</th>\n",
       "      <th>LandContour</th>\n",
       "      <th>Utilities</th>\n",
       "      <th>...</th>\n",
       "      <th>PoolArea</th>\n",
       "      <th>PoolQC</th>\n",
       "      <th>Fence</th>\n",
       "      <th>MiscFeature</th>\n",
       "      <th>MiscVal</th>\n",
       "      <th>MoSold</th>\n",
       "      <th>YrSold</th>\n",
       "      <th>SaleType</th>\n",
       "      <th>SaleCondition</th>\n",
       "      <th>SalePrice</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>60</td>\n",
       "      <td>RL</td>\n",
       "      <td>65.0</td>\n",
       "      <td>8450</td>\n",
       "      <td>Pave</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Reg</td>\n",
       "      <td>Lvl</td>\n",
       "      <td>AllPub</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2008</td>\n",
       "      <td>WD</td>\n",
       "      <td>Normal</td>\n",
       "      <td>208500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>RL</td>\n",
       "      <td>80.0</td>\n",
       "      <td>9600</td>\n",
       "      <td>Pave</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Reg</td>\n",
       "      <td>Lvl</td>\n",
       "      <td>AllPub</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>2007</td>\n",
       "      <td>WD</td>\n",
       "      <td>Normal</td>\n",
       "      <td>181500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>60</td>\n",
       "      <td>RL</td>\n",
       "      <td>68.0</td>\n",
       "      <td>11250</td>\n",
       "      <td>Pave</td>\n",
       "      <td>NaN</td>\n",
       "      <td>IR1</td>\n",
       "      <td>Lvl</td>\n",
       "      <td>AllPub</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>2008</td>\n",
       "      <td>WD</td>\n",
       "      <td>Normal</td>\n",
       "      <td>223500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>70</td>\n",
       "      <td>RL</td>\n",
       "      <td>60.0</td>\n",
       "      <td>9550</td>\n",
       "      <td>Pave</td>\n",
       "      <td>NaN</td>\n",
       "      <td>IR1</td>\n",
       "      <td>Lvl</td>\n",
       "      <td>AllPub</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2006</td>\n",
       "      <td>WD</td>\n",
       "      <td>Abnorml</td>\n",
       "      <td>140000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>60</td>\n",
       "      <td>RL</td>\n",
       "      <td>84.0</td>\n",
       "      <td>14260</td>\n",
       "      <td>Pave</td>\n",
       "      <td>NaN</td>\n",
       "      <td>IR1</td>\n",
       "      <td>Lvl</td>\n",
       "      <td>AllPub</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>2008</td>\n",
       "      <td>WD</td>\n",
       "      <td>Normal</td>\n",
       "      <td>250000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 81 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n",
       "0   1          60       RL         65.0     8450   Pave   NaN      Reg   \n",
       "1   2          20       RL         80.0     9600   Pave   NaN      Reg   \n",
       "2   3          60       RL         68.0    11250   Pave   NaN      IR1   \n",
       "3   4          70       RL         60.0     9550   Pave   NaN      IR1   \n",
       "4   5          60       RL         84.0    14260   Pave   NaN      IR1   \n",
       "\n",
       "  LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal MoSold  \\\n",
       "0         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      2   \n",
       "1         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      5   \n",
       "2         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      9   \n",
       "3         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      2   \n",
       "4         Lvl    AllPub  ...        0    NaN   NaN         NaN       0     12   \n",
       "\n",
       "  YrSold  SaleType  SaleCondition  SalePrice  \n",
       "0   2008        WD         Normal     208500  \n",
       "1   2007        WD         Normal     181500  \n",
       "2   2008        WD         Normal     223500  \n",
       "3   2006        WD        Abnorml     140000  \n",
       "4   2008        WD         Normal     250000  \n",
       "\n",
       "[5 rows x 81 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 라이브러리 및 데이터 불러오기\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "df = pd.read_csv('../input/house-prices-advanced-regression-techniques/train.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e0c4c5dd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T07:39:17.496461Z",
     "iopub.status.busy": "2022-05-19T07:39:17.494451Z",
     "iopub.status.idle": "2022-05-19T07:39:17.498255Z",
     "shell.execute_reply": "2022-05-19T07:39:17.499221Z",
     "shell.execute_reply.started": "2022-05-19T07:37:08.365012Z"
    },
    "papermill": {
     "duration": 0.023764,
     "end_time": "2022-05-19T07:39:17.499487",
     "exception": false,
     "start_time": "2022-05-19T07:39:17.475723",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 'SalePrice'컬럼 왜도와 첨도계산 \n",
    "\n",
    "skew1 = df['SalePrice'].skew()\n",
    "kurt1 = df['SalePrice'].kurtosis()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b34a3816",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T07:39:17.522766Z",
     "iopub.status.busy": "2022-05-19T07:39:17.522081Z",
     "iopub.status.idle": "2022-05-19T07:39:17.527716Z",
     "shell.execute_reply": "2022-05-19T07:39:17.528345Z",
     "shell.execute_reply.started": "2022-05-19T07:37:24.956936Z"
    },
    "papermill": {
     "duration": 0.018254,
     "end_time": "2022-05-19T07:39:17.528510",
     "exception": false,
     "start_time": "2022-05-19T07:39:17.510256",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6.536281860064529"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['SalePrice'].kurt()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "49b98a16",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T07:39:17.551172Z",
     "iopub.status.busy": "2022-05-19T07:39:17.550507Z",
     "iopub.status.idle": "2022-05-19T07:39:17.557662Z",
     "shell.execute_reply": "2022-05-19T07:39:17.558262Z",
     "shell.execute_reply.started": "2022-05-19T07:37:25.240686Z"
    },
    "papermill": {
     "duration": 0.020181,
     "end_time": "2022-05-19T07:39:17.558443",
     "exception": false,
     "start_time": "2022-05-19T07:39:17.538262",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# x에 0이 있으면 y는 무한대로 가기 때문에 log(x+1)을 해줌\n",
    "# 이 기능을 해주는게 log1p\n",
    "np.log(1+df['SalePrice'])\n",
    "\n",
    "# 'SalePrice'컬럼 로그변환\n",
    "df['SalePrice'] = np.log1p(df['SalePrice'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "53697aa8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T07:39:17.583068Z",
     "iopub.status.busy": "2022-05-19T07:39:17.580075Z",
     "iopub.status.idle": "2022-05-19T07:39:17.585989Z",
     "shell.execute_reply": "2022-05-19T07:39:17.586445Z",
     "shell.execute_reply.started": "2022-05-19T07:37:25.589960Z"
    },
    "papermill": {
     "duration": 0.018363,
     "end_time": "2022-05-19T07:39:17.586626",
     "exception": false,
     "start_time": "2022-05-19T07:39:17.568263",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 'SalePrice'컬럼 왜도와 첨도계산 \n",
    "\n",
    "skew2 = df['SalePrice'].skew()\n",
    "kurt2 = df['SalePrice'].kurt()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "290feac5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T07:39:17.610869Z",
     "iopub.status.busy": "2022-05-19T07:39:17.610172Z",
     "iopub.status.idle": "2022-05-19T07:39:17.614637Z",
     "shell.execute_reply": "2022-05-19T07:39:17.614017Z",
     "shell.execute_reply.started": "2022-05-19T07:37:29.865523Z"
    },
    "papermill": {
     "duration": 0.018461,
     "end_time": "2022-05-19T07:39:17.614778",
     "exception": false,
     "start_time": "2022-05-19T07:39:17.596317",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9.35\n"
     ]
    }
   ],
   "source": [
    "# 모두 더한 다음 출력\n",
    "print(round(skew1+kurt1+skew2+kurt2,2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d4bb9257",
   "metadata": {
    "papermill": {
     "duration": 0.009741,
     "end_time": "2022-05-19T07:39:17.634481",
     "exception": false,
     "start_time": "2022-05-19T07:39:17.624740",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 9.570348,
   "end_time": "2022-05-19T07:39:18.253271",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2022-05-19T07:39:08.682923",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
