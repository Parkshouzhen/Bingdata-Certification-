{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "616dc82c",
   "metadata": {
    "papermill": {
     "duration": 0.009326,
     "end_time": "2022-05-19T09:03:37.944220",
     "exception": false,
     "start_time": "2022-05-19T09:03:37.934894",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 결측치 제거 및 그룹 합계에서 조건에 맞는 값 찾아 출력\n",
    "- 주어진 데이터 중 basic1.csv에서 'f1'컬럼 결측 데이터를 제거하고, 'city'와 'f2'을 기준으로 묶어 합계를 구하고, 'city가 경기이면서 f2가 0'인 조건에 만족하는 f1 값을 구하시오\n",
    "- 데이터셋 : basic1.csv\n",
    "- 오른쪽 상단 copy&edit 클릭 -> 예상문제 풀이 시작"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9639a5c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T09:03:37.966941Z",
     "iopub.status.busy": "2022-05-19T09:03:37.965702Z",
     "iopub.status.idle": "2022-05-19T09:03:38.020311Z",
     "shell.execute_reply": "2022-05-19T09:03:38.021271Z",
     "shell.execute_reply.started": "2022-05-19T08:55:28.180297Z"
    },
    "papermill": {
     "duration": 0.067453,
     "end_time": "2022-05-19T09:03:38.021694",
     "exception": false,
     "start_time": "2022-05-19T09:03:37.954241",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>city</th>\n",
       "      <th>f1</th>\n",
       "      <th>f2</th>\n",
       "      <th>f3</th>\n",
       "      <th>f4</th>\n",
       "      <th>f5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>id01</td>\n",
       "      <td>2.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ENFJ</td>\n",
       "      <td>91.297791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>id02</td>\n",
       "      <td>9.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>70.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ENFJ</td>\n",
       "      <td>60.339826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>id03</td>\n",
       "      <td>27.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>61.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ISTJ</td>\n",
       "      <td>17.252986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>id04</td>\n",
       "      <td>75.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>INFP</td>\n",
       "      <td>52.667078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>id05</td>\n",
       "      <td>24.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>85.0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ISFJ</td>\n",
       "      <td>29.269869</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     id   age city    f1  f2   f3    f4         f5\n",
       "0  id01   2.0   서울   NaN   0  NaN  ENFJ  91.297791\n",
       "1  id02   9.0   서울  70.0   1  NaN  ENFJ  60.339826\n",
       "2  id03  27.0   서울  61.0   1  NaN  ISTJ  17.252986\n",
       "3  id04  75.0   서울   NaN   2  NaN  INFP  52.667078\n",
       "4  id05  24.0   서울  85.0   2  NaN  ISFJ  29.269869"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 라이브러리 및 데이터 불러오기\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "df = pd.read_csv('../input/bigdatacertificationkr/basic1.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d93de154",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T09:03:38.051484Z",
     "iopub.status.busy": "2022-05-19T09:03:38.050821Z",
     "iopub.status.idle": "2022-05-19T09:03:38.053672Z",
     "shell.execute_reply": "2022-05-19T09:03:38.054398Z",
     "shell.execute_reply.started": "2022-05-19T08:55:28.293719Z"
    },
    "papermill": {
     "duration": 0.021209,
     "end_time": "2022-05-19T09:03:38.054755",
     "exception": false,
     "start_time": "2022-05-19T09:03:38.033546",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(100, 8)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "523bd832",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T09:03:38.087540Z",
     "iopub.status.busy": "2022-05-19T09:03:38.086462Z",
     "iopub.status.idle": "2022-05-19T09:03:38.093544Z",
     "shell.execute_reply": "2022-05-19T09:03:38.094321Z",
     "shell.execute_reply.started": "2022-05-19T08:55:28.440202Z"
    },
    "papermill": {
     "duration": 0.024694,
     "end_time": "2022-05-19T09:03:38.094590",
     "exception": false,
     "start_time": "2022-05-19T09:03:38.069896",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id       0\n",
       "age      0\n",
       "city     0\n",
       "f1      31\n",
       "f2       0\n",
       "f3      95\n",
       "f4       0\n",
       "f5       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# f1컬럼 결측치 제거\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ad5a4fa4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T09:03:38.123587Z",
     "iopub.status.busy": "2022-05-19T09:03:38.122863Z",
     "iopub.status.idle": "2022-05-19T09:03:38.135533Z",
     "shell.execute_reply": "2022-05-19T09:03:38.134925Z",
     "shell.execute_reply.started": "2022-05-19T08:55:28.705026Z"
    },
    "papermill": {
     "duration": 0.028347,
     "end_time": "2022-05-19T09:03:38.135694",
     "exception": false,
     "start_time": "2022-05-19T09:03:38.107347",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df[~df['f1'].isnull()] #f1의 결측치 부정한 것을 다시 df에 넣음\n",
    "\n",
    "# subset=['col'] 특정 컬럼의 결측치(행제거)\n",
    "# df = df.dropna(subset=['f1'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3b4af6e2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T09:03:38.160188Z",
     "iopub.status.busy": "2022-05-19T09:03:38.159151Z",
     "iopub.status.idle": "2022-05-19T09:03:38.173583Z",
     "shell.execute_reply": "2022-05-19T09:03:38.172821Z",
     "shell.execute_reply.started": "2022-05-19T08:55:28.820169Z"
    },
    "papermill": {
     "duration": 0.027763,
     "end_time": "2022-05-19T09:03:38.173772",
     "exception": false,
     "start_time": "2022-05-19T09:03:38.146009",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 그룹 합계 계산\n",
    "df2 = df.groupby(['city','f2']).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1d7c58a4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T09:03:38.208093Z",
     "iopub.status.busy": "2022-05-19T09:03:38.207352Z",
     "iopub.status.idle": "2022-05-19T09:03:38.210005Z",
     "shell.execute_reply": "2022-05-19T09:03:38.210635Z",
     "shell.execute_reply.started": "2022-05-19T08:55:28.984219Z"
    },
    "papermill": {
     "duration": 0.027623,
     "end_time": "2022-05-19T09:03:38.210814",
     "exception": false,
     "start_time": "2022-05-19T09:03:38.183191",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>f1</th>\n",
       "      <th>f5</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th>f2</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">경기</th>\n",
       "      <th>0</th>\n",
       "      <td>720.4</td>\n",
       "      <td>833.0</td>\n",
       "      <td>943.944823</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>696.0</td>\n",
       "      <td>670.0</td>\n",
       "      <td>657.241212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>239.0</td>\n",
       "      <td>311.0</td>\n",
       "      <td>362.300060</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">대구</th>\n",
       "      <th>0</th>\n",
       "      <td>387.0</td>\n",
       "      <td>527.0</td>\n",
       "      <td>183.199568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>217.6</td>\n",
       "      <td>235.0</td>\n",
       "      <td>241.333824</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>140.0</td>\n",
       "      <td>211.0</td>\n",
       "      <td>79.667919</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">부산</th>\n",
       "      <th>0</th>\n",
       "      <td>331.0</td>\n",
       "      <td>389.0</td>\n",
       "      <td>284.371097</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>188.7</td>\n",
       "      <td>315.0</td>\n",
       "      <td>299.270973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-13.5</td>\n",
       "      <td>47.0</td>\n",
       "      <td>67.886373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">서울</th>\n",
       "      <th>0</th>\n",
       "      <td>145.0</td>\n",
       "      <td>278.0</td>\n",
       "      <td>218.528577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>315.3</td>\n",
       "      <td>534.0</td>\n",
       "      <td>438.485010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>68.3</td>\n",
       "      <td>207.0</td>\n",
       "      <td>126.661135</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           age     f1          f5\n",
       "city f2                          \n",
       "경기   0   720.4  833.0  943.944823\n",
       "     1   696.0  670.0  657.241212\n",
       "     2   239.0  311.0  362.300060\n",
       "대구   0   387.0  527.0  183.199568\n",
       "     1   217.6  235.0  241.333824\n",
       "     2   140.0  211.0   79.667919\n",
       "부산   0   331.0  389.0  284.371097\n",
       "     1   188.7  315.0  299.270973\n",
       "     2   -13.5   47.0   67.886373\n",
       "서울   0   145.0  278.0  218.528577\n",
       "     1   315.3  534.0  438.485010\n",
       "     2    68.3  207.0  126.661135"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6b50e81a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-19T09:03:38.237103Z",
     "iopub.status.busy": "2022-05-19T09:03:38.236115Z",
     "iopub.status.idle": "2022-05-19T09:03:38.239764Z",
     "shell.execute_reply": "2022-05-19T09:03:38.240467Z",
     "shell.execute_reply.started": "2022-05-19T09:02:37.039106Z"
    },
    "papermill": {
     "duration": 0.019976,
     "end_time": "2022-05-19T09:03:38.240724",
     "exception": false,
     "start_time": "2022-05-19T09:03:38.220748",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "833.0\n"
     ]
    }
   ],
   "source": [
    "# 조건에 맞는 값 출력\n",
    "# 'city가 경기이면서 f2가 0'인 조건에 만족하는 f1 값\n",
    "\n",
    "print(df2.iloc[0]['f1'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "60d7d9ee",
   "metadata": {
    "papermill": {
     "duration": 0.009836,
     "end_time": "2022-05-19T09:03:38.261802",
     "exception": false,
     "start_time": "2022-05-19T09:03:38.251966",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.915825,
   "end_time": "2022-05-19T09:03:39.627370",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2022-05-19T09:03:28.711545",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
