{
 "cells": [
  {
   "attachments": {
    "f70c3a4b-9984-4656-af95-dac047a900cb.png": {
     "image/png": "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"
    }
   },
   "cell_type": "markdown",
   "id": "58569d8b",
   "metadata": {
    "papermill": {
     "duration": 0.01866,
     "end_time": "2022-05-25T05:59:36.786034",
     "exception": false,
     "start_time": "2022-05-25T05:59:36.767374",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 전자상거래 배송 데이터\n",
    "### 제품 배송 시간에 맞춰 배송되었는지 예측모델 만들기\n",
    "학습용 데이터 (X_train, y_train)을 이용하여 배송 예측 모형을 만든 후, 이를 평가용 데이터(X_test)에 적용하여 얻은 예측값을 다음과 같은 형식의 CSV파일로 생성하시오(제출한 모델의 성능은 ROC-AUC 평가지표에 따라 채점)\n",
    "\n",
    "![image.png](attachment:f70c3a4b-9984-4656-af95-dac047a900cb.png)\n",
    "\n",
    "[시험용 데이터셋 만들기] 코드는 예시문제와 동일한 형태의 X_train, y_train, X_test 데이터를 만들기 위함임\n",
    "\n",
    "(유의사항)\n",
    "- 성능이 우수한 예측모형을 구축하기 위해서는 적절한 데이터 전처리, 피처엔지니어링, 분류알고리즘, 하이퍼파라미터 튜닝, 모형 앙상블 등이 수반되어야 한다.\n",
    "- 수험번호.csv파일이 만들어지도록 코드를 제출한다.\n",
    "- 제출한 모델의 성능은 ROC-AUC형태로 읽어드린다."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ef19621",
   "metadata": {
    "papermill": {
     "duration": 0.01707,
     "end_time": "2022-05-25T05:59:36.821415",
     "exception": false,
     "start_time": "2022-05-25T05:59:36.804345",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## [참고]작업형2 문구\n",
    "- 출력을 원하실 경우 print() 함수 활용\n",
    "- 예시) print(df.head())\n",
    "- getcwd(), chdir() 등 작업 폴더 설정 불필요\n",
    "- 파일 경로 상 내부 드라이브 경로(C: 등) 접근 불가\n",
    "\n",
    "### 데이터 파일 읽기 예제\n",
    "- import pandas as pd\n",
    "- X_test = pd.read_csv(\"data/X_test.csv\")\n",
    "- X_train = pd.read_csv(\"data/X_train.csv\")\n",
    "- y_train = pd.read_csv(\"data/y_train.csv\")\n",
    "\n",
    "### 사용자 코딩\n",
    "\n",
    "### 답안 제출 참고\n",
    "- 아래 코드 예측변수와 수험번호를 개인별로 변경하여 활용\n",
    "- pd.DataFrame({'cust_id': X_test.cust_id, 'gender': pred}).to_csv('003000000.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b5e094c7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:36.862519Z",
     "iopub.status.busy": "2022-05-25T05:59:36.860664Z",
     "iopub.status.idle": "2022-05-25T05:59:37.894839Z",
     "shell.execute_reply": "2022-05-25T05:59:37.895437Z",
     "shell.execute_reply.started": "2022-05-25T05:44:33.600974Z"
    },
    "papermill": {
     "duration": 1.056943,
     "end_time": "2022-05-25T05:59:37.895714",
     "exception": false,
     "start_time": "2022-05-25T05:59:36.838771",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((8799, 11), (2200, 11), (8799, 2), (2200, 2))"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 시험환경 세팅 (코드 변경 X)\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "def exam_data_load(df, target, id_name=\"\", null_name=\"\"):\n",
    "    if id_name == \"\":\n",
    "        df = df.reset_index().rename(columns={\"index\": \"id\"})\n",
    "        id_name = 'id'\n",
    "    else:\n",
    "        id_name = id_name\n",
    "    \n",
    "    if null_name != \"\":\n",
    "        df[df == null_name] = np.nan\n",
    "    \n",
    "    X_train, X_test = train_test_split(df, test_size=0.2, random_state=2021)\n",
    "    \n",
    "    y_train = X_train[[id_name, target]]\n",
    "    X_train = X_train.drop(columns=[target])\n",
    "\n",
    "    \n",
    "    y_test = X_test[[id_name, target]]\n",
    "    X_test = X_test.drop(columns=[target])\n",
    "    return X_train, X_test, y_train, y_test \n",
    "    \n",
    "df = pd.read_csv(\"../input/customer-analytics/Train.csv\")\n",
    "X_train, X_test, y_train, y_test = exam_data_load(df, target='Reached.on.Time_Y.N', id_name='ID')\n",
    "\n",
    "X_train.shape, X_test.shape, y_train.shape, y_test.shape\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "53a18aba",
   "metadata": {
    "papermill": {
     "duration": 0.017451,
     "end_time": "2022-05-25T05:59:37.931349",
     "exception": false,
     "start_time": "2022-05-25T05:59:37.913898",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 사용자 코딩"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ba5389e2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:37.969835Z",
     "iopub.status.busy": "2022-05-25T05:59:37.969198Z",
     "iopub.status.idle": "2022-05-25T05:59:37.973845Z",
     "shell.execute_reply": "2022-05-25T05:59:37.974445Z",
     "shell.execute_reply.started": "2022-05-25T05:44:34.197901Z"
    },
    "papermill": {
     "duration": 0.025544,
     "end_time": "2022-05-25T05:59:37.974608",
     "exception": false,
     "start_time": "2022-05-25T05:59:37.949064",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((8799, 11), (2200, 11), (8799, 2))"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 제공된 3개 데이터 (y_test데이터 활용X)\n",
    "X_train.shape, X_test.shape, y_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4863dd2e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:38.018691Z",
     "iopub.status.busy": "2022-05-25T05:59:38.018045Z",
     "iopub.status.idle": "2022-05-25T05:59:38.037306Z",
     "shell.execute_reply": "2022-05-25T05:59:38.036651Z",
     "shell.execute_reply.started": "2022-05-25T05:44:34.442280Z"
    },
    "papermill": {
     "duration": 0.044867,
     "end_time": "2022-05-25T05:59:38.037458",
     "exception": false,
     "start_time": "2022-05-25T05:59:37.992591",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Warehouse_block</th>\n",
       "      <th>Mode_of_Shipment</th>\n",
       "      <th>Customer_care_calls</th>\n",
       "      <th>Customer_rating</th>\n",
       "      <th>Cost_of_the_Product</th>\n",
       "      <th>Prior_purchases</th>\n",
       "      <th>Product_importance</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Discount_offered</th>\n",
       "      <th>Weight_in_gms</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3999</th>\n",
       "      <td>4000</td>\n",
       "      <td>B</td>\n",
       "      <td>Ship</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>134</td>\n",
       "      <td>3</td>\n",
       "      <td>high</td>\n",
       "      <td>F</td>\n",
       "      <td>6</td>\n",
       "      <td>5680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9559</th>\n",
       "      <td>9560</td>\n",
       "      <td>F</td>\n",
       "      <td>Ship</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>173</td>\n",
       "      <td>3</td>\n",
       "      <td>medium</td>\n",
       "      <td>M</td>\n",
       "      <td>5</td>\n",
       "      <td>5331</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2649</th>\n",
       "      <td>2650</td>\n",
       "      <td>B</td>\n",
       "      <td>Ship</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>192</td>\n",
       "      <td>3</td>\n",
       "      <td>high</td>\n",
       "      <td>M</td>\n",
       "      <td>46</td>\n",
       "      <td>3206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4843</th>\n",
       "      <td>4844</td>\n",
       "      <td>F</td>\n",
       "      <td>Ship</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>284</td>\n",
       "      <td>4</td>\n",
       "      <td>medium</td>\n",
       "      <td>M</td>\n",
       "      <td>8</td>\n",
       "      <td>5346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9601</th>\n",
       "      <td>9602</td>\n",
       "      <td>F</td>\n",
       "      <td>Flight</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>246</td>\n",
       "      <td>3</td>\n",
       "      <td>low</td>\n",
       "      <td>F</td>\n",
       "      <td>10</td>\n",
       "      <td>4707</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3934</th>\n",
       "      <td>3935</td>\n",
       "      <td>C</td>\n",
       "      <td>Ship</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>178</td>\n",
       "      <td>3</td>\n",
       "      <td>low</td>\n",
       "      <td>F</td>\n",
       "      <td>5</td>\n",
       "      <td>4096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2669</th>\n",
       "      <td>2670</td>\n",
       "      <td>F</td>\n",
       "      <td>Ship</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>206</td>\n",
       "      <td>2</td>\n",
       "      <td>medium</td>\n",
       "      <td>F</td>\n",
       "      <td>56</td>\n",
       "      <td>2069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1152</th>\n",
       "      <td>1153</td>\n",
       "      <td>D</td>\n",
       "      <td>Ship</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>135</td>\n",
       "      <td>10</td>\n",
       "      <td>medium</td>\n",
       "      <td>M</td>\n",
       "      <td>35</td>\n",
       "      <td>1989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6201</th>\n",
       "      <td>6202</td>\n",
       "      <td>B</td>\n",
       "      <td>Ship</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>251</td>\n",
       "      <td>2</td>\n",
       "      <td>medium</td>\n",
       "      <td>F</td>\n",
       "      <td>6</td>\n",
       "      <td>4376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9332</th>\n",
       "      <td>9333</td>\n",
       "      <td>A</td>\n",
       "      <td>Flight</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>144</td>\n",
       "      <td>4</td>\n",
       "      <td>low</td>\n",
       "      <td>F</td>\n",
       "      <td>5</td>\n",
       "      <td>4631</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8799 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID Warehouse_block Mode_of_Shipment  Customer_care_calls  \\\n",
       "3999  4000               B             Ship                    3   \n",
       "9559  9560               F             Ship                    4   \n",
       "2649  2650               B             Ship                    2   \n",
       "4843  4844               F             Ship                    6   \n",
       "9601  9602               F           Flight                    3   \n",
       "...    ...             ...              ...                  ...   \n",
       "3934  3935               C             Ship                    6   \n",
       "2669  2670               F             Ship                    3   \n",
       "1152  1153               D             Ship                    4   \n",
       "6201  6202               B             Ship                    4   \n",
       "9332  9333               A           Flight                    6   \n",
       "\n",
       "      Customer_rating  Cost_of_the_Product  Prior_purchases  \\\n",
       "3999                4                  134                3   \n",
       "9559                3                  173                3   \n",
       "2649                1                  192                3   \n",
       "4843                5                  284                4   \n",
       "9601                1                  246                3   \n",
       "...               ...                  ...              ...   \n",
       "3934                5                  178                3   \n",
       "2669                1                  206                2   \n",
       "1152                1                  135               10   \n",
       "6201                4                  251                2   \n",
       "9332                4                  144                4   \n",
       "\n",
       "     Product_importance Gender  Discount_offered  Weight_in_gms  \n",
       "3999               high      F                 6           5680  \n",
       "9559             medium      M                 5           5331  \n",
       "2649               high      M                46           3206  \n",
       "4843             medium      M                 8           5346  \n",
       "9601                low      F                10           4707  \n",
       "...                 ...    ...               ...            ...  \n",
       "3934                low      F                 5           4096  \n",
       "2669             medium      F                56           2069  \n",
       "1152             medium      M                35           1989  \n",
       "6201             medium      F                 6           4376  \n",
       "9332                low      F                 5           4631  \n",
       "\n",
       "[8799 rows x 11 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "03c09673",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:38.079262Z",
     "iopub.status.busy": "2022-05-25T05:59:38.078496Z",
     "iopub.status.idle": "2022-05-25T05:59:38.091923Z",
     "shell.execute_reply": "2022-05-25T05:59:38.091392Z",
     "shell.execute_reply.started": "2022-05-25T05:44:34.591408Z"
    },
    "papermill": {
     "duration": 0.035517,
     "end_time": "2022-05-25T05:59:38.092088",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.056571",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Ship' 'Flight' 'Road']\n",
      "['high' 'medium' 'low']\n",
      "['B' 'F' 'C' 'A' 'D']\n"
     ]
    }
   ],
   "source": [
    "print(X_train['Mode_of_Shipment'].unique())\n",
    "print(X_train['Product_importance'].unique())\n",
    "print(X_train['Warehouse_block'].unique())\n",
    "\n",
    "# ship, flight, road 를 라벨 인코딩해서 0,1,2 숫자로 바꿔주면\n",
    "# 같은 선상에 있는 값이지만 2로 변환된 road의 중요치가 높아지게 됨\n",
    "# 트리기반 알고리즘에서는 괜찮지만 이외의 알고리즘이라면 원핫인코딩이 더 좋은 듯"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "408a84aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:38.135416Z",
     "iopub.status.busy": "2022-05-25T05:59:38.134706Z",
     "iopub.status.idle": "2022-05-25T05:59:38.167882Z",
     "shell.execute_reply": "2022-05-25T05:59:38.168443Z",
     "shell.execute_reply.started": "2022-05-25T05:44:34.857684Z"
    },
    "papermill": {
     "duration": 0.056122,
     "end_time": "2022-05-25T05:59:38.168646",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.112524",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Product_importance는 중요도에 따라 다른값으로 변환\n",
    "X_train['Product_importance'] =X_train['Product_importance'].replace({'high':3, 'medium':2, 'low':1})\n",
    "\n",
    "# Mode_of_Shipment 원핫인코딩 후 train 에 추가\n",
    "importace_dummy= pd.get_dummies(X_train['Mode_of_Shipment'])\n",
    "X_train = pd.concat([X_train, importace_dummy], axis=1)\n",
    "X_train.drop('Mode_of_Shipment', axis = 1 ,inplace=True)\n",
    "\n",
    "# Gender 0 ,1 로 나눔 (남자0, 여자1)\n",
    "X_train['Gender'] = X_train['Gender'].replace({'F':1, 'M':0})\n",
    "\n",
    "# Warehouse_block 원핫인코딩 후 train 에 추가\n",
    "warehouse_dummy= pd.get_dummies(X_train['Warehouse_block'])\n",
    "X_train = pd.concat([X_train, warehouse_dummy], axis=1)\n",
    "X_train.drop('Warehouse_block', axis = 1 ,inplace=True)\n",
    "\n",
    "# ID는 고유한 값, 필요없으므로 삭제\n",
    "#X_train = X_train.drop('ID', axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "62898cbc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:38.210770Z",
     "iopub.status.busy": "2022-05-25T05:59:38.210146Z",
     "iopub.status.idle": "2022-05-25T05:59:38.226568Z",
     "shell.execute_reply": "2022-05-25T05:59:38.225929Z",
     "shell.execute_reply.started": "2022-05-25T05:44:35.196165Z"
    },
    "papermill": {
     "duration": 0.039025,
     "end_time": "2022-05-25T05:59:38.226710",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.187685",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Customer_care_calls</th>\n",
       "      <th>Customer_rating</th>\n",
       "      <th>Cost_of_the_Product</th>\n",
       "      <th>Prior_purchases</th>\n",
       "      <th>Product_importance</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Discount_offered</th>\n",
       "      <th>Weight_in_gms</th>\n",
       "      <th>Flight</th>\n",
       "      <th>Road</th>\n",
       "      <th>Ship</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>F</th>\n",
       "      <th>ID</th>\n",
       "      <th>Reached.on.Time_Y.N</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3999</th>\n",
       "      <td>4000</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>134</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>5680</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9559</th>\n",
       "      <td>9560</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>173</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>5331</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9560</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2649</th>\n",
       "      <td>2650</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>192</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>46</td>\n",
       "      <td>3206</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2650</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4843</th>\n",
       "      <td>4844</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>284</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>5346</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4844</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9601</th>\n",
       "      <td>9602</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>246</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>4707</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9602</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID  Customer_care_calls  Customer_rating  Cost_of_the_Product  \\\n",
       "3999  4000                    3                4                  134   \n",
       "9559  9560                    4                3                  173   \n",
       "2649  2650                    2                1                  192   \n",
       "4843  4844                    6                5                  284   \n",
       "9601  9602                    3                1                  246   \n",
       "\n",
       "      Prior_purchases  Product_importance  Gender  Discount_offered  \\\n",
       "3999                3                   3       1                 6   \n",
       "9559                3                   2       0                 5   \n",
       "2649                3                   3       0                46   \n",
       "4843                4                   2       0                 8   \n",
       "9601                3                   1       1                10   \n",
       "\n",
       "      Weight_in_gms  Flight  Road  Ship  A  B  C  D  F    ID  \\\n",
       "3999           5680       0     0     1  0  1  0  0  0  4000   \n",
       "9559           5331       0     0     1  0  0  0  0  1  9560   \n",
       "2649           3206       0     0     1  0  1  0  0  0  2650   \n",
       "4843           5346       0     0     1  0  0  0  0  1  4844   \n",
       "9601           4707       1     0     0  0  0  0  0  1  9602   \n",
       "\n",
       "      Reached.on.Time_Y.N  \n",
       "3999                    0  \n",
       "9559                    1  \n",
       "2649                    1  \n",
       "4843                    1  \n",
       "9601                    1  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 문제와 정답의 상관관계 확인을 위해 df 합침\n",
    "train = pd.concat([X_train, y_train], axis=1)\n",
    "train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "18e5fcf4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:38.270916Z",
     "iopub.status.busy": "2022-05-25T05:59:38.270193Z",
     "iopub.status.idle": "2022-05-25T05:59:38.318437Z",
     "shell.execute_reply": "2022-05-25T05:59:38.319033Z",
     "shell.execute_reply.started": "2022-05-25T05:44:35.500707Z"
    },
    "papermill": {
     "duration": 0.072704,
     "end_time": "2022-05-25T05:59:38.319225",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.246521",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Customer_care_calls</th>\n",
       "      <th>Customer_rating</th>\n",
       "      <th>Cost_of_the_Product</th>\n",
       "      <th>Prior_purchases</th>\n",
       "      <th>Product_importance</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Discount_offered</th>\n",
       "      <th>Weight_in_gms</th>\n",
       "      <th>Flight</th>\n",
       "      <th>Road</th>\n",
       "      <th>Ship</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>F</th>\n",
       "      <th>ID</th>\n",
       "      <th>Reached.on.Time_Y.N</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>ID</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.190646</td>\n",
       "      <td>-0.003233</td>\n",
       "      <td>0.196850</td>\n",
       "      <td>0.146370</td>\n",
       "      <td>-0.055482</td>\n",
       "      <td>0.008936</td>\n",
       "      <td>-0.600797</td>\n",
       "      <td>0.282889</td>\n",
       "      <td>-0.000929</td>\n",
       "      <td>0.001351</td>\n",
       "      <td>-0.000330</td>\n",
       "      <td>0.010841</td>\n",
       "      <td>-0.000213</td>\n",
       "      <td>-0.010234</td>\n",
       "      <td>0.000587</td>\n",
       "      <td>-0.000844</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.422089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer_care_calls</th>\n",
       "      <td>0.190646</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.014604</td>\n",
       "      <td>0.317264</td>\n",
       "      <td>0.183911</td>\n",
       "      <td>-0.059168</td>\n",
       "      <td>-0.000364</td>\n",
       "      <td>-0.140472</td>\n",
       "      <td>-0.269032</td>\n",
       "      <td>0.023513</td>\n",
       "      <td>0.003542</td>\n",
       "      <td>-0.021364</td>\n",
       "      <td>-0.009952</td>\n",
       "      <td>-0.011835</td>\n",
       "      <td>-0.000779</td>\n",
       "      <td>0.001261</td>\n",
       "      <td>0.016880</td>\n",
       "      <td>0.190646</td>\n",
       "      <td>-0.069367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer_rating</th>\n",
       "      <td>-0.003233</td>\n",
       "      <td>0.014604</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.017745</td>\n",
       "      <td>0.013998</td>\n",
       "      <td>0.010097</td>\n",
       "      <td>-0.002113</td>\n",
       "      <td>-0.008645</td>\n",
       "      <td>0.004286</td>\n",
       "      <td>0.001892</td>\n",
       "      <td>0.000574</td>\n",
       "      <td>-0.001947</td>\n",
       "      <td>-0.015248</td>\n",
       "      <td>-0.002415</td>\n",
       "      <td>0.004066</td>\n",
       "      <td>0.007320</td>\n",
       "      <td>0.005072</td>\n",
       "      <td>-0.003233</td>\n",
       "      <td>0.010046</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cost_of_the_Product</th>\n",
       "      <td>0.196850</td>\n",
       "      <td>0.317264</td>\n",
       "      <td>0.017745</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.137567</td>\n",
       "      <td>-0.039535</td>\n",
       "      <td>-0.020114</td>\n",
       "      <td>-0.143461</td>\n",
       "      <td>-0.126833</td>\n",
       "      <td>-0.003281</td>\n",
       "      <td>0.005918</td>\n",
       "      <td>-0.002068</td>\n",
       "      <td>-0.014663</td>\n",
       "      <td>0.017644</td>\n",
       "      <td>0.008015</td>\n",
       "      <td>0.010089</td>\n",
       "      <td>-0.016523</td>\n",
       "      <td>0.196850</td>\n",
       "      <td>-0.077089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Prior_purchases</th>\n",
       "      <td>0.146370</td>\n",
       "      <td>0.183911</td>\n",
       "      <td>0.013998</td>\n",
       "      <td>0.137567</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.030809</td>\n",
       "      <td>0.006668</td>\n",
       "      <td>-0.077321</td>\n",
       "      <td>-0.167387</td>\n",
       "      <td>0.001354</td>\n",
       "      <td>0.006369</td>\n",
       "      <td>-0.006084</td>\n",
       "      <td>0.004212</td>\n",
       "      <td>-0.005483</td>\n",
       "      <td>0.000127</td>\n",
       "      <td>0.009968</td>\n",
       "      <td>-0.006950</td>\n",
       "      <td>0.146370</td>\n",
       "      <td>-0.053242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Product_importance</th>\n",
       "      <td>-0.055482</td>\n",
       "      <td>-0.059168</td>\n",
       "      <td>0.010097</td>\n",
       "      <td>-0.039535</td>\n",
       "      <td>0.030809</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.002591</td>\n",
       "      <td>0.027178</td>\n",
       "      <td>0.091912</td>\n",
       "      <td>0.009884</td>\n",
       "      <td>-0.002387</td>\n",
       "      <td>-0.005929</td>\n",
       "      <td>-0.008688</td>\n",
       "      <td>0.004777</td>\n",
       "      <td>0.007273</td>\n",
       "      <td>0.008850</td>\n",
       "      <td>-0.009552</td>\n",
       "      <td>-0.055482</td>\n",
       "      <td>0.022536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gender</th>\n",
       "      <td>0.008936</td>\n",
       "      <td>-0.000364</td>\n",
       "      <td>-0.002113</td>\n",
       "      <td>-0.020114</td>\n",
       "      <td>0.006668</td>\n",
       "      <td>0.002591</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.005837</td>\n",
       "      <td>0.002184</td>\n",
       "      <td>-0.017654</td>\n",
       "      <td>0.013697</td>\n",
       "      <td>0.003162</td>\n",
       "      <td>0.000569</td>\n",
       "      <td>-0.002384</td>\n",
       "      <td>0.003447</td>\n",
       "      <td>0.005346</td>\n",
       "      <td>-0.005486</td>\n",
       "      <td>0.008936</td>\n",
       "      <td>-0.010296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Discount_offered</th>\n",
       "      <td>-0.600797</td>\n",
       "      <td>-0.140472</td>\n",
       "      <td>-0.008645</td>\n",
       "      <td>-0.143461</td>\n",
       "      <td>-0.077321</td>\n",
       "      <td>0.027178</td>\n",
       "      <td>0.005837</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.378735</td>\n",
       "      <td>-0.004277</td>\n",
       "      <td>-0.004138</td>\n",
       "      <td>0.006637</td>\n",
       "      <td>-0.014835</td>\n",
       "      <td>-0.004504</td>\n",
       "      <td>0.010945</td>\n",
       "      <td>-0.007807</td>\n",
       "      <td>0.012854</td>\n",
       "      <td>-0.600797</td>\n",
       "      <td>0.401194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Weight_in_gms</th>\n",
       "      <td>0.282889</td>\n",
       "      <td>-0.269032</td>\n",
       "      <td>0.004286</td>\n",
       "      <td>-0.126833</td>\n",
       "      <td>-0.167387</td>\n",
       "      <td>0.091912</td>\n",
       "      <td>0.002184</td>\n",
       "      <td>-0.378735</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.009125</td>\n",
       "      <td>0.002549</td>\n",
       "      <td>0.005201</td>\n",
       "      <td>0.010474</td>\n",
       "      <td>0.000998</td>\n",
       "      <td>-0.014334</td>\n",
       "      <td>0.000140</td>\n",
       "      <td>0.002075</td>\n",
       "      <td>0.282889</td>\n",
       "      <td>-0.271183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Flight</th>\n",
       "      <td>-0.000929</td>\n",
       "      <td>0.023513</td>\n",
       "      <td>0.001892</td>\n",
       "      <td>-0.003281</td>\n",
       "      <td>0.001354</td>\n",
       "      <td>0.009884</td>\n",
       "      <td>-0.017654</td>\n",
       "      <td>-0.004277</td>\n",
       "      <td>-0.009125</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.196165</td>\n",
       "      <td>-0.635545</td>\n",
       "      <td>0.005553</td>\n",
       "      <td>0.006372</td>\n",
       "      <td>-0.004203</td>\n",
       "      <td>-0.002583</td>\n",
       "      <td>-0.004104</td>\n",
       "      <td>-0.000929</td>\n",
       "      <td>0.010792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Road</th>\n",
       "      <td>0.001351</td>\n",
       "      <td>0.003542</td>\n",
       "      <td>0.000574</td>\n",
       "      <td>0.005918</td>\n",
       "      <td>0.006369</td>\n",
       "      <td>-0.002387</td>\n",
       "      <td>0.013697</td>\n",
       "      <td>-0.004138</td>\n",
       "      <td>0.002549</td>\n",
       "      <td>-0.196165</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.632392</td>\n",
       "      <td>-0.005883</td>\n",
       "      <td>0.003091</td>\n",
       "      <td>0.001561</td>\n",
       "      <td>-0.004274</td>\n",
       "      <td>0.004363</td>\n",
       "      <td>0.001351</td>\n",
       "      <td>-0.005993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ship</th>\n",
       "      <td>-0.000330</td>\n",
       "      <td>-0.021364</td>\n",
       "      <td>-0.001947</td>\n",
       "      <td>-0.002068</td>\n",
       "      <td>-0.006084</td>\n",
       "      <td>-0.005929</td>\n",
       "      <td>0.003162</td>\n",
       "      <td>0.006637</td>\n",
       "      <td>0.005201</td>\n",
       "      <td>-0.635545</td>\n",
       "      <td>-0.632392</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000245</td>\n",
       "      <td>-0.007468</td>\n",
       "      <td>0.002091</td>\n",
       "      <td>0.005406</td>\n",
       "      <td>-0.000193</td>\n",
       "      <td>-0.000330</td>\n",
       "      <td>-0.003807</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A</th>\n",
       "      <td>0.010841</td>\n",
       "      <td>-0.009952</td>\n",
       "      <td>-0.015248</td>\n",
       "      <td>-0.014663</td>\n",
       "      <td>0.004212</td>\n",
       "      <td>-0.008688</td>\n",
       "      <td>0.000569</td>\n",
       "      <td>-0.014835</td>\n",
       "      <td>0.010474</td>\n",
       "      <td>0.005553</td>\n",
       "      <td>-0.005883</td>\n",
       "      <td>0.000245</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.201714</td>\n",
       "      <td>-0.201136</td>\n",
       "      <td>-0.200143</td>\n",
       "      <td>-0.319788</td>\n",
       "      <td>0.010841</td>\n",
       "      <td>-0.021993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B</th>\n",
       "      <td>-0.000213</td>\n",
       "      <td>-0.011835</td>\n",
       "      <td>-0.002415</td>\n",
       "      <td>0.017644</td>\n",
       "      <td>-0.005483</td>\n",
       "      <td>0.004777</td>\n",
       "      <td>-0.002384</td>\n",
       "      <td>-0.004504</td>\n",
       "      <td>0.000998</td>\n",
       "      <td>0.006372</td>\n",
       "      <td>0.003091</td>\n",
       "      <td>-0.007468</td>\n",
       "      <td>-0.201714</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.199182</td>\n",
       "      <td>-0.198198</td>\n",
       "      <td>-0.316680</td>\n",
       "      <td>-0.000213</td>\n",
       "      <td>0.006050</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>-0.010234</td>\n",
       "      <td>-0.000779</td>\n",
       "      <td>0.004066</td>\n",
       "      <td>0.008015</td>\n",
       "      <td>0.000127</td>\n",
       "      <td>0.007273</td>\n",
       "      <td>0.003447</td>\n",
       "      <td>0.010945</td>\n",
       "      <td>-0.014334</td>\n",
       "      <td>-0.004203</td>\n",
       "      <td>0.001561</td>\n",
       "      <td>0.002091</td>\n",
       "      <td>-0.201136</td>\n",
       "      <td>-0.199182</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.197630</td>\n",
       "      <td>-0.315772</td>\n",
       "      <td>-0.010234</td>\n",
       "      <td>0.009288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>D</th>\n",
       "      <td>0.000587</td>\n",
       "      <td>0.001261</td>\n",
       "      <td>0.007320</td>\n",
       "      <td>0.010089</td>\n",
       "      <td>0.009968</td>\n",
       "      <td>0.008850</td>\n",
       "      <td>0.005346</td>\n",
       "      <td>-0.007807</td>\n",
       "      <td>0.000140</td>\n",
       "      <td>-0.002583</td>\n",
       "      <td>-0.004274</td>\n",
       "      <td>0.005406</td>\n",
       "      <td>-0.200143</td>\n",
       "      <td>-0.198198</td>\n",
       "      <td>-0.197630</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.314213</td>\n",
       "      <td>0.000587</td>\n",
       "      <td>-0.000583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F</th>\n",
       "      <td>-0.000844</td>\n",
       "      <td>0.016880</td>\n",
       "      <td>0.005072</td>\n",
       "      <td>-0.016523</td>\n",
       "      <td>-0.006950</td>\n",
       "      <td>-0.009552</td>\n",
       "      <td>-0.005486</td>\n",
       "      <td>0.012854</td>\n",
       "      <td>0.002075</td>\n",
       "      <td>-0.004104</td>\n",
       "      <td>0.004363</td>\n",
       "      <td>-0.000193</td>\n",
       "      <td>-0.319788</td>\n",
       "      <td>-0.316680</td>\n",
       "      <td>-0.315772</td>\n",
       "      <td>-0.314213</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000844</td>\n",
       "      <td>0.005841</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ID</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.190646</td>\n",
       "      <td>-0.003233</td>\n",
       "      <td>0.196850</td>\n",
       "      <td>0.146370</td>\n",
       "      <td>-0.055482</td>\n",
       "      <td>0.008936</td>\n",
       "      <td>-0.600797</td>\n",
       "      <td>0.282889</td>\n",
       "      <td>-0.000929</td>\n",
       "      <td>0.001351</td>\n",
       "      <td>-0.000330</td>\n",
       "      <td>0.010841</td>\n",
       "      <td>-0.000213</td>\n",
       "      <td>-0.010234</td>\n",
       "      <td>0.000587</td>\n",
       "      <td>-0.000844</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.422089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Reached.on.Time_Y.N</th>\n",
       "      <td>-0.422089</td>\n",
       "      <td>-0.069367</td>\n",
       "      <td>0.010046</td>\n",
       "      <td>-0.077089</td>\n",
       "      <td>-0.053242</td>\n",
       "      <td>0.022536</td>\n",
       "      <td>-0.010296</td>\n",
       "      <td>0.401194</td>\n",
       "      <td>-0.271183</td>\n",
       "      <td>0.010792</td>\n",
       "      <td>-0.005993</td>\n",
       "      <td>-0.003807</td>\n",
       "      <td>-0.021993</td>\n",
       "      <td>0.006050</td>\n",
       "      <td>0.009288</td>\n",
       "      <td>-0.000583</td>\n",
       "      <td>0.005841</td>\n",
       "      <td>-0.422089</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           ID  Customer_care_calls  Customer_rating  \\\n",
       "ID                   1.000000             0.190646        -0.003233   \n",
       "Customer_care_calls  0.190646             1.000000         0.014604   \n",
       "Customer_rating     -0.003233             0.014604         1.000000   \n",
       "Cost_of_the_Product  0.196850             0.317264         0.017745   \n",
       "Prior_purchases      0.146370             0.183911         0.013998   \n",
       "Product_importance  -0.055482            -0.059168         0.010097   \n",
       "Gender               0.008936            -0.000364        -0.002113   \n",
       "Discount_offered    -0.600797            -0.140472        -0.008645   \n",
       "Weight_in_gms        0.282889            -0.269032         0.004286   \n",
       "Flight              -0.000929             0.023513         0.001892   \n",
       "Road                 0.001351             0.003542         0.000574   \n",
       "Ship                -0.000330            -0.021364        -0.001947   \n",
       "A                    0.010841            -0.009952        -0.015248   \n",
       "B                   -0.000213            -0.011835        -0.002415   \n",
       "C                   -0.010234            -0.000779         0.004066   \n",
       "D                    0.000587             0.001261         0.007320   \n",
       "F                   -0.000844             0.016880         0.005072   \n",
       "ID                   1.000000             0.190646        -0.003233   \n",
       "Reached.on.Time_Y.N -0.422089            -0.069367         0.010046   \n",
       "\n",
       "                     Cost_of_the_Product  Prior_purchases  Product_importance  \\\n",
       "ID                              0.196850         0.146370           -0.055482   \n",
       "Customer_care_calls             0.317264         0.183911           -0.059168   \n",
       "Customer_rating                 0.017745         0.013998            0.010097   \n",
       "Cost_of_the_Product             1.000000         0.137567           -0.039535   \n",
       "Prior_purchases                 0.137567         1.000000            0.030809   \n",
       "Product_importance             -0.039535         0.030809            1.000000   \n",
       "Gender                         -0.020114         0.006668            0.002591   \n",
       "Discount_offered               -0.143461        -0.077321            0.027178   \n",
       "Weight_in_gms                  -0.126833        -0.167387            0.091912   \n",
       "Flight                         -0.003281         0.001354            0.009884   \n",
       "Road                            0.005918         0.006369           -0.002387   \n",
       "Ship                           -0.002068        -0.006084           -0.005929   \n",
       "A                              -0.014663         0.004212           -0.008688   \n",
       "B                               0.017644        -0.005483            0.004777   \n",
       "C                               0.008015         0.000127            0.007273   \n",
       "D                               0.010089         0.009968            0.008850   \n",
       "F                              -0.016523        -0.006950           -0.009552   \n",
       "ID                              0.196850         0.146370           -0.055482   \n",
       "Reached.on.Time_Y.N            -0.077089        -0.053242            0.022536   \n",
       "\n",
       "                       Gender  Discount_offered  Weight_in_gms    Flight  \\\n",
       "ID                   0.008936         -0.600797       0.282889 -0.000929   \n",
       "Customer_care_calls -0.000364         -0.140472      -0.269032  0.023513   \n",
       "Customer_rating     -0.002113         -0.008645       0.004286  0.001892   \n",
       "Cost_of_the_Product -0.020114         -0.143461      -0.126833 -0.003281   \n",
       "Prior_purchases      0.006668         -0.077321      -0.167387  0.001354   \n",
       "Product_importance   0.002591          0.027178       0.091912  0.009884   \n",
       "Gender               1.000000          0.005837       0.002184 -0.017654   \n",
       "Discount_offered     0.005837          1.000000      -0.378735 -0.004277   \n",
       "Weight_in_gms        0.002184         -0.378735       1.000000 -0.009125   \n",
       "Flight              -0.017654         -0.004277      -0.009125  1.000000   \n",
       "Road                 0.013697         -0.004138       0.002549 -0.196165   \n",
       "Ship                 0.003162          0.006637       0.005201 -0.635545   \n",
       "A                    0.000569         -0.014835       0.010474  0.005553   \n",
       "B                   -0.002384         -0.004504       0.000998  0.006372   \n",
       "C                    0.003447          0.010945      -0.014334 -0.004203   \n",
       "D                    0.005346         -0.007807       0.000140 -0.002583   \n",
       "F                   -0.005486          0.012854       0.002075 -0.004104   \n",
       "ID                   0.008936         -0.600797       0.282889 -0.000929   \n",
       "Reached.on.Time_Y.N -0.010296          0.401194      -0.271183  0.010792   \n",
       "\n",
       "                         Road      Ship         A         B         C  \\\n",
       "ID                   0.001351 -0.000330  0.010841 -0.000213 -0.010234   \n",
       "Customer_care_calls  0.003542 -0.021364 -0.009952 -0.011835 -0.000779   \n",
       "Customer_rating      0.000574 -0.001947 -0.015248 -0.002415  0.004066   \n",
       "Cost_of_the_Product  0.005918 -0.002068 -0.014663  0.017644  0.008015   \n",
       "Prior_purchases      0.006369 -0.006084  0.004212 -0.005483  0.000127   \n",
       "Product_importance  -0.002387 -0.005929 -0.008688  0.004777  0.007273   \n",
       "Gender               0.013697  0.003162  0.000569 -0.002384  0.003447   \n",
       "Discount_offered    -0.004138  0.006637 -0.014835 -0.004504  0.010945   \n",
       "Weight_in_gms        0.002549  0.005201  0.010474  0.000998 -0.014334   \n",
       "Flight              -0.196165 -0.635545  0.005553  0.006372 -0.004203   \n",
       "Road                 1.000000 -0.632392 -0.005883  0.003091  0.001561   \n",
       "Ship                -0.632392  1.000000  0.000245 -0.007468  0.002091   \n",
       "A                   -0.005883  0.000245  1.000000 -0.201714 -0.201136   \n",
       "B                    0.003091 -0.007468 -0.201714  1.000000 -0.199182   \n",
       "C                    0.001561  0.002091 -0.201136 -0.199182  1.000000   \n",
       "D                   -0.004274  0.005406 -0.200143 -0.198198 -0.197630   \n",
       "F                    0.004363 -0.000193 -0.319788 -0.316680 -0.315772   \n",
       "ID                   0.001351 -0.000330  0.010841 -0.000213 -0.010234   \n",
       "Reached.on.Time_Y.N -0.005993 -0.003807 -0.021993  0.006050  0.009288   \n",
       "\n",
       "                            D         F        ID  Reached.on.Time_Y.N  \n",
       "ID                   0.000587 -0.000844  1.000000            -0.422089  \n",
       "Customer_care_calls  0.001261  0.016880  0.190646            -0.069367  \n",
       "Customer_rating      0.007320  0.005072 -0.003233             0.010046  \n",
       "Cost_of_the_Product  0.010089 -0.016523  0.196850            -0.077089  \n",
       "Prior_purchases      0.009968 -0.006950  0.146370            -0.053242  \n",
       "Product_importance   0.008850 -0.009552 -0.055482             0.022536  \n",
       "Gender               0.005346 -0.005486  0.008936            -0.010296  \n",
       "Discount_offered    -0.007807  0.012854 -0.600797             0.401194  \n",
       "Weight_in_gms        0.000140  0.002075  0.282889            -0.271183  \n",
       "Flight              -0.002583 -0.004104 -0.000929             0.010792  \n",
       "Road                -0.004274  0.004363  0.001351            -0.005993  \n",
       "Ship                 0.005406 -0.000193 -0.000330            -0.003807  \n",
       "A                   -0.200143 -0.319788  0.010841            -0.021993  \n",
       "B                   -0.198198 -0.316680 -0.000213             0.006050  \n",
       "C                   -0.197630 -0.315772 -0.010234             0.009288  \n",
       "D                    1.000000 -0.314213  0.000587            -0.000583  \n",
       "F                   -0.314213  1.000000 -0.000844             0.005841  \n",
       "ID                   0.000587 -0.000844  1.000000            -0.422089  \n",
       "Reached.on.Time_Y.N -0.000583  0.005841 -0.422089             1.000000  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 문제와 정답(Reached.on.Time_Y.N)의 상관관계 확인\n",
    "\n",
    "train.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2008abba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:38.365146Z",
     "iopub.status.busy": "2022-05-25T05:59:38.364185Z",
     "iopub.status.idle": "2022-05-25T05:59:38.380061Z",
     "shell.execute_reply": "2022-05-25T05:59:38.379454Z",
     "shell.execute_reply.started": "2022-05-25T05:44:35.594305Z"
    },
    "papermill": {
     "duration": 0.039926,
     "end_time": "2022-05-25T05:59:38.380205",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.340279",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Discount_offered 양의 상관관계\n",
    "# ID 음의 상관관계\n",
    "# Warehouse_block 뚜렷한 상관관계 없어보임 (A,B,C,D,F) => 삭제\n",
    "# Mode_of_Shipment 뚜렷한 상관관계 없어보임 (Flight, Road, Ship) => 삭제\n",
    "# Gender 뚜렷한 상관관계 없어보임 => 삭제\n",
    "\n",
    "X_train.drop(columns='A', inplace=True, axis=1)\n",
    "X_train.drop(columns='B', inplace=True, axis=1)\n",
    "X_train.drop(columns='C', inplace=True, axis=1)\n",
    "X_train.drop(columns='D', inplace=True, axis=1)\n",
    "X_train.drop(columns='F', inplace=True, axis=1)\n",
    "X_train.drop(columns='Flight', inplace=True, axis=1)\n",
    "X_train.drop(columns='Road', inplace=True, axis=1)\n",
    "X_train.drop(columns='Ship', inplace=True, axis=1)      \n",
    "X_train.drop(columns='Gender', inplace=True, axis=1)     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "916ce00c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:38.435690Z",
     "iopub.status.busy": "2022-05-25T05:59:38.425060Z",
     "iopub.status.idle": "2022-05-25T05:59:38.439608Z",
     "shell.execute_reply": "2022-05-25T05:59:38.438999Z",
     "shell.execute_reply.started": "2022-05-25T05:44:35.645857Z"
    },
    "papermill": {
     "duration": 0.038562,
     "end_time": "2022-05-25T05:59:38.439746",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.401184",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Customer_care_calls</th>\n",
       "      <th>Customer_rating</th>\n",
       "      <th>Cost_of_the_Product</th>\n",
       "      <th>Prior_purchases</th>\n",
       "      <th>Product_importance</th>\n",
       "      <th>Discount_offered</th>\n",
       "      <th>Weight_in_gms</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3999</th>\n",
       "      <td>4000</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>134</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>5680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9559</th>\n",
       "      <td>9560</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>173</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>5331</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2649</th>\n",
       "      <td>2650</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>192</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>46</td>\n",
       "      <td>3206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4843</th>\n",
       "      <td>4844</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>284</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>5346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9601</th>\n",
       "      <td>9602</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>246</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>4707</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3934</th>\n",
       "      <td>3935</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>178</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2669</th>\n",
       "      <td>2670</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>206</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>56</td>\n",
       "      <td>2069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1152</th>\n",
       "      <td>1153</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>135</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>35</td>\n",
       "      <td>1989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6201</th>\n",
       "      <td>6202</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>251</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>4376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9332</th>\n",
       "      <td>9333</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>144</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4631</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8799 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID  Customer_care_calls  Customer_rating  Cost_of_the_Product  \\\n",
       "3999  4000                    3                4                  134   \n",
       "9559  9560                    4                3                  173   \n",
       "2649  2650                    2                1                  192   \n",
       "4843  4844                    6                5                  284   \n",
       "9601  9602                    3                1                  246   \n",
       "...    ...                  ...              ...                  ...   \n",
       "3934  3935                    6                5                  178   \n",
       "2669  2670                    3                1                  206   \n",
       "1152  1153                    4                1                  135   \n",
       "6201  6202                    4                4                  251   \n",
       "9332  9333                    6                4                  144   \n",
       "\n",
       "      Prior_purchases  Product_importance  Discount_offered  Weight_in_gms  \n",
       "3999                3                   3                 6           5680  \n",
       "9559                3                   2                 5           5331  \n",
       "2649                3                   3                46           3206  \n",
       "4843                4                   2                 8           5346  \n",
       "9601                3                   1                10           4707  \n",
       "...               ...                 ...               ...            ...  \n",
       "3934                3                   1                 5           4096  \n",
       "2669                2                   2                56           2069  \n",
       "1152               10                   2                35           1989  \n",
       "6201                2                   2                 6           4376  \n",
       "9332                4                   1                 5           4631  \n",
       "\n",
       "[8799 rows x 8 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6df9b932",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:38.490705Z",
     "iopub.status.busy": "2022-05-25T05:59:38.490020Z",
     "iopub.status.idle": "2022-05-25T05:59:38.505341Z",
     "shell.execute_reply": "2022-05-25T05:59:38.505890Z",
     "shell.execute_reply.started": "2022-05-25T05:44:35.698109Z"
    },
    "papermill": {
     "duration": 0.043944,
     "end_time": "2022-05-25T05:59:38.506089",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.462145",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Customer_care_calls</th>\n",
       "      <th>Customer_rating</th>\n",
       "      <th>Cost_of_the_Product</th>\n",
       "      <th>Prior_purchases</th>\n",
       "      <th>Product_importance</th>\n",
       "      <th>Discount_offered</th>\n",
       "      <th>Weight_in_gms</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4732</th>\n",
       "      <td>4733</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>250</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>5475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2039</th>\n",
       "      <td>2040</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>202</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>34</td>\n",
       "      <td>3885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5113</th>\n",
       "      <td>5114</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>154</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>5528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2360</th>\n",
       "      <td>2361</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>209</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>3169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5995</th>\n",
       "      <td>5996</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>250</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>359</th>\n",
       "      <td>360</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>131</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1659</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7831</th>\n",
       "      <td>7832</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>166</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>5990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9753</th>\n",
       "      <td>9754</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>202</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>4552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3750</th>\n",
       "      <td>3751</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>224</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>4445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4413</th>\n",
       "      <td>4414</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>224</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4405</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2200 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID  Customer_care_calls  Customer_rating  Cost_of_the_Product  \\\n",
       "4732  4733                    5                5                  250   \n",
       "2039  2040                    5                2                  202   \n",
       "5113  5114                    5                4                  154   \n",
       "2360  2361                    6                4                  209   \n",
       "5995  5996                    6                1                  250   \n",
       "...    ...                  ...              ...                  ...   \n",
       "359    360                    4                3                  131   \n",
       "7831  7832                    2                1                  166   \n",
       "9753  9754                    3                5                  202   \n",
       "3750  3751                    3                5                  224   \n",
       "4413  4414                    3                2                  224   \n",
       "\n",
       "      Prior_purchases  Product_importance  Discount_offered  Weight_in_gms  \n",
       "4732                2                   2                10           5475  \n",
       "2039                3                   2                34           3885  \n",
       "5113                2                   1                 5           5528  \n",
       "2360                5                   1                53           3169  \n",
       "5995                4                   1                 4           1018  \n",
       "...               ...                 ...               ...            ...  \n",
       "359                 5                   1                 6           1659  \n",
       "7831                3                   2                 7           5990  \n",
       "9753                2                   2                 8           4552  \n",
       "3750                2                   1                10           4445  \n",
       "4413                2                   2                 3           4405  \n",
       "\n",
       "[2200 rows x 8 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test.drop(['Warehouse_block', 'Mode_of_Shipment', 'Gender'], axis=1, inplace=True)\n",
    "X_test['Product_importance'] = X_test['Product_importance'].replace({'high':3, 'medium':2, 'low':1})\n",
    "X_test"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d3e43a9",
   "metadata": {
    "papermill": {
     "duration": 0.023312,
     "end_time": "2022-05-25T05:59:38.551725",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.528413",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 모델"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3192baa4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:38.599143Z",
     "iopub.status.busy": "2022-05-25T05:59:38.598423Z",
     "iopub.status.idle": "2022-05-25T05:59:38.880338Z",
     "shell.execute_reply": "2022-05-25T05:59:38.879747Z",
     "shell.execute_reply.started": "2022-05-25T05:47:16.231217Z"
    },
    "papermill": {
     "duration": 0.306736,
     "end_time": "2022-05-25T05:59:38.880496",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.573760",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from xgboost import XGBClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9b756167",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-25T05:59:38.928217Z",
     "iopub.status.busy": "2022-05-25T05:59:38.927523Z",
     "iopub.status.idle": "2022-05-25T05:59:38.930834Z",
     "shell.execute_reply": "2022-05-25T05:59:38.931352Z",
     "shell.execute_reply.started": "2022-05-25T05:58:43.721194Z"
    },
    "papermill": {
     "duration": 0.028765,
     "end_time": "2022-05-25T05:59:38.931529",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.902764",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ef772330",
   "metadata": {
    "papermill": {
     "duration": 0.021606,
     "end_time": "2022-05-25T05:59:38.975177",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.953571",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3ed995db",
   "metadata": {
    "papermill": {
     "duration": 0.021919,
     "end_time": "2022-05-25T05:59:39.018964",
     "exception": false,
     "start_time": "2022-05-25T05:59:38.997045",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cea2ed6c",
   "metadata": {
    "papermill": {
     "duration": 0.021611,
     "end_time": "2022-05-25T05:59:39.062851",
     "exception": false,
     "start_time": "2022-05-25T05:59:39.041240",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eeb6bee8",
   "metadata": {
    "papermill": {
     "duration": 0.02201,
     "end_time": "2022-05-25T05:59:39.107053",
     "exception": false,
     "start_time": "2022-05-25T05:59:39.085043",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e019d2b1",
   "metadata": {
    "papermill": {
     "duration": 0.021842,
     "end_time": "2022-05-25T05:59:39.151197",
     "exception": false,
     "start_time": "2022-05-25T05:59:39.129355",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "239788e3",
   "metadata": {
    "papermill": {
     "duration": 0.021575,
     "end_time": "2022-05-25T05:59:39.194712",
     "exception": false,
     "start_time": "2022-05-25T05:59:39.173137",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "242cacdf",
   "metadata": {
    "papermill": {
     "duration": 0.021595,
     "end_time": "2022-05-25T05:59:39.239073",
     "exception": false,
     "start_time": "2022-05-25T05:59:39.217478",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 11.560843,
   "end_time": "2022-05-25T05:59:39.974361",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2022-05-25T05:59:28.413518",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
