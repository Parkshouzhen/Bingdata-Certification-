{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "99343031",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "papermill": {
     "duration": 0.010146,
     "end_time": "2022-06-16T15:30:50.220146",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.210000",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 주어진 데이터(basic2.csv)에서 주 단위 Sales의 합계를 구하고, 가장 큰 값을 가진 주와 작은 값을 가진 주의 차이를 구하시오(절대값)\n",
    "- 데이터셋 : basic2.csv\n",
    "- 오른쪽 상단 copy&edit 클릭 -> 예상문제 풀이 시작"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9f10a013",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:30:50.243412Z",
     "iopub.status.busy": "2022-06-16T15:30:50.242177Z",
     "iopub.status.idle": "2022-06-16T15:30:50.251109Z",
     "shell.execute_reply": "2022-06-16T15:30:50.251625Z",
     "shell.execute_reply.started": "2022-06-16T15:30:11.675677Z"
    },
    "papermill": {
     "duration": 0.022385,
     "end_time": "2022-06-16T15:30:50.251916",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.229531",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d4c174c7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:30:50.275337Z",
     "iopub.status.busy": "2022-06-16T15:30:50.274672Z",
     "iopub.status.idle": "2022-06-16T15:30:50.320970Z",
     "shell.execute_reply": "2022-06-16T15:30:50.320299Z",
     "shell.execute_reply.started": "2022-06-16T15:30:11.685818Z"
    },
    "papermill": {
     "duration": 0.060235,
     "end_time": "2022-06-16T15:30:50.321134",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.260899",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sales</th>\n",
       "      <th>PV</th>\n",
       "      <th>UV</th>\n",
       "      <th>Events</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-01-01</th>\n",
       "      <td>22711525</td>\n",
       "      <td>397349</td>\n",
       "      <td>4421.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-02</th>\n",
       "      <td>36779</td>\n",
       "      <td>3969</td>\n",
       "      <td>2289.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-03</th>\n",
       "      <td>13943875</td>\n",
       "      <td>373890</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-04</th>\n",
       "      <td>8088593</td>\n",
       "      <td>142054</td>\n",
       "      <td>2157.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-05</th>\n",
       "      <td>2395374</td>\n",
       "      <td>190684</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Sales      PV      UV  Events\n",
       "Date                                        \n",
       "2022-01-01  22711525  397349  4421.0       1\n",
       "2022-01-02     36779    3969  2289.0       0\n",
       "2022-01-03  13943875  373890     NaN       1\n",
       "2022-01-04   8088593  142054  2157.0       0\n",
       "2022-01-05   2395374  190684     NaN       0"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('../input/bigdatacertificationkr/basic2.csv',index_col='Date', parse_dates=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "403c2b56",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:30:50.351509Z",
     "iopub.status.busy": "2022-06-16T15:30:50.350743Z",
     "iopub.status.idle": "2022-06-16T15:30:50.362593Z",
     "shell.execute_reply": "2022-06-16T15:30:50.363420Z",
     "shell.execute_reply.started": "2022-06-16T15:30:11.726407Z"
    },
    "papermill": {
     "duration": 0.032626,
     "end_time": "2022-06-16T15:30:50.363673",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.331047",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "DatetimeIndex: 730 entries, 2022-01-01 to 2023-12-31\n",
      "Data columns (total 4 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   Sales   730 non-null    int64  \n",
      " 1   PV      730 non-null    int64  \n",
      " 2   UV      684 non-null    float64\n",
      " 3   Events  730 non-null    int64  \n",
      "dtypes: float64(1), int64(3)\n",
      "memory usage: 28.5 KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "abebc350",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:30:50.388538Z",
     "iopub.status.busy": "2022-06-16T15:30:50.387814Z",
     "iopub.status.idle": "2022-06-16T15:30:50.420586Z",
     "shell.execute_reply": "2022-06-16T15:30:50.421104Z",
     "shell.execute_reply.started": "2022-06-16T15:30:11.749638Z"
    },
    "papermill": {
     "duration": 0.046981,
     "end_time": "2022-06-16T15:30:50.421284",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.374303",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sales</th>\n",
       "      <th>PV</th>\n",
       "      <th>UV</th>\n",
       "      <th>Events</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-01-02</th>\n",
       "      <td>22748304</td>\n",
       "      <td>401318</td>\n",
       "      <td>6710.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-09</th>\n",
       "      <td>33373822</td>\n",
       "      <td>1148464</td>\n",
       "      <td>15189.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-16</th>\n",
       "      <td>20754519</td>\n",
       "      <td>283773</td>\n",
       "      <td>9344.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-23</th>\n",
       "      <td>21880751</td>\n",
       "      <td>538633</td>\n",
       "      <td>9841.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-30</th>\n",
       "      <td>28878452</td>\n",
       "      <td>560814</td>\n",
       "      <td>7808.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-03</th>\n",
       "      <td>47120909</td>\n",
       "      <td>884734</td>\n",
       "      <td>12086.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-10</th>\n",
       "      <td>46398053</td>\n",
       "      <td>975024</td>\n",
       "      <td>21872.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-17</th>\n",
       "      <td>20763518</td>\n",
       "      <td>291261</td>\n",
       "      <td>17221.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-24</th>\n",
       "      <td>34528035</td>\n",
       "      <td>901451</td>\n",
       "      <td>11732.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-31</th>\n",
       "      <td>51435189</td>\n",
       "      <td>813019</td>\n",
       "      <td>12168.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>105 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Sales       PV       UV  Events\n",
       "Date                                          \n",
       "2022-01-02  22748304   401318   6710.0       1\n",
       "2022-01-09  33373822  1148464  15189.0       2\n",
       "2022-01-16  20754519   283773   9344.0       0\n",
       "2022-01-23  21880751   538633   9841.0       1\n",
       "2022-01-30  28878452   560814   7808.0       1\n",
       "...              ...      ...      ...     ...\n",
       "2023-12-03  47120909   884734  12086.0       2\n",
       "2023-12-10  46398053   975024  21872.0       3\n",
       "2023-12-17  20763518   291261  17221.0       0\n",
       "2023-12-24  34528035   901451  11732.0       2\n",
       "2023-12-31  51435189   813019  12168.0       2\n",
       "\n",
       "[105 rows x 4 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_w = df.resample('W').sum()\n",
    "df_w"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "94dd7d80",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:30:50.445381Z",
     "iopub.status.busy": "2022-06-16T15:30:50.444391Z",
     "iopub.status.idle": "2022-06-16T15:30:50.449118Z",
     "shell.execute_reply": "2022-06-16T15:30:50.449641Z",
     "shell.execute_reply.started": "2022-06-16T15:30:11.786857Z"
    },
    "papermill": {
     "duration": 0.018368,
     "end_time": "2022-06-16T15:30:50.449814",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.431446",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "sales_max = df_w['Sales'].max()\n",
    "sales_min = df_w['Sales'].min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "6a3d09a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:30:50.473422Z",
     "iopub.status.busy": "2022-06-16T15:30:50.472438Z",
     "iopub.status.idle": "2022-06-16T15:30:50.477512Z",
     "shell.execute_reply": "2022-06-16T15:30:50.478089Z",
     "shell.execute_reply.started": "2022-06-16T15:30:11.798873Z"
    },
    "papermill": {
     "duration": 0.01862,
     "end_time": "2022-06-16T15:30:50.478261",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.459641",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "91639050\n"
     ]
    }
   ],
   "source": [
    "print(abs(sales_max-sales_min))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "61b34790",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:30:50.502587Z",
     "iopub.status.busy": "2022-06-16T15:30:50.501618Z",
     "iopub.status.idle": "2022-06-16T15:30:50.510246Z",
     "shell.execute_reply": "2022-06-16T15:30:50.510796Z",
     "shell.execute_reply.started": "2022-06-16T15:30:11.822328Z"
    },
    "papermill": {
     "duration": 0.02265,
     "end_time": "2022-06-16T15:30:50.510972",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.488322",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"../input/bigdatacertificationkr/basic2.csv\", parse_dates=['Date'], index_col=0)\n",
    "\n",
    "# 아래 코드를 한줄로 표현함\n",
    "# df = pd.read_csv(\"../input/bigdatacertificationkr/basic2.csv\")\n",
    "# df['Date'] = pd.to_datetime(df['Date'])\n",
    "# df = df.set_index('Date')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fd4f5d45",
   "metadata": {
    "papermill": {
     "duration": 0.010187,
     "end_time": "2022-06-16T15:30:50.531370",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.521183",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 단위 \n",
    "- 주 단위 W\n",
    "- 2주 단위 2W\n",
    "- 월 단위 M"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "42c71c9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:30:50.559397Z",
     "iopub.status.busy": "2022-06-16T15:30:50.558698Z",
     "iopub.status.idle": "2022-06-16T15:30:50.569513Z",
     "shell.execute_reply": "2022-06-16T15:30:50.569946Z",
     "shell.execute_reply.started": "2022-06-16T15:30:11.848531Z"
    },
    "papermill": {
     "duration": 0.028442,
     "end_time": "2022-06-16T15:30:50.570150",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.541708",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sales</th>\n",
       "      <th>PV</th>\n",
       "      <th>UV</th>\n",
       "      <th>Events</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-01-02</th>\n",
       "      <td>22748304</td>\n",
       "      <td>401318</td>\n",
       "      <td>6710.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-09</th>\n",
       "      <td>33373822</td>\n",
       "      <td>1148464</td>\n",
       "      <td>15189.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-16</th>\n",
       "      <td>20754519</td>\n",
       "      <td>283773</td>\n",
       "      <td>9344.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-23</th>\n",
       "      <td>21880751</td>\n",
       "      <td>538633</td>\n",
       "      <td>9841.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-30</th>\n",
       "      <td>28878452</td>\n",
       "      <td>560814</td>\n",
       "      <td>7808.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Sales       PV       UV  Events\n",
       "Date                                          \n",
       "2022-01-02  22748304   401318   6710.0       1\n",
       "2022-01-09  33373822  1148464  15189.0       2\n",
       "2022-01-16  20754519   283773   9344.0       0\n",
       "2022-01-23  21880751   538633   9841.0       1\n",
       "2022-01-30  28878452   560814   7808.0       1"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_w = df.resample('W').sum()\n",
    "df_w.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9e2321f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:30:50.596217Z",
     "iopub.status.busy": "2022-06-16T15:30:50.595581Z",
     "iopub.status.idle": "2022-06-16T15:30:50.600822Z",
     "shell.execute_reply": "2022-06-16T15:30:50.601309Z",
     "shell.execute_reply.started": "2022-06-16T15:30:11.885540Z"
    },
    "papermill": {
     "duration": 0.020648,
     "end_time": "2022-06-16T15:30:50.601505",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.580857",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "99165648"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ma = df_w['Sales'].max()\n",
    "ma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "fab2df29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:30:50.627055Z",
     "iopub.status.busy": "2022-06-16T15:30:50.626383Z",
     "iopub.status.idle": "2022-06-16T15:30:50.630891Z",
     "shell.execute_reply": "2022-06-16T15:30:50.631332Z",
     "shell.execute_reply.started": "2022-06-16T15:30:11.896464Z"
    },
    "papermill": {
     "duration": 0.018818,
     "end_time": "2022-06-16T15:30:50.631506",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.612688",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7526598"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mi = df_w['Sales'].min()\n",
    "mi"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "592ae392",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:30:50.657344Z",
     "iopub.status.busy": "2022-06-16T15:30:50.656647Z",
     "iopub.status.idle": "2022-06-16T15:30:50.660588Z",
     "shell.execute_reply": "2022-06-16T15:30:50.661311Z",
     "shell.execute_reply.started": "2022-06-16T15:30:11.918225Z"
    },
    "papermill": {
     "duration": 0.018713,
     "end_time": "2022-06-16T15:30:50.661541",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.642828",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "91639050\n"
     ]
    }
   ],
   "source": [
    "print(ma - mi)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d651b80a",
   "metadata": {
    "papermill": {
     "duration": 0.011157,
     "end_time": "2022-06-16T15:30:50.685728",
     "exception": false,
     "start_time": "2022-06-16T15:30:50.674571",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.215984,
   "end_time": "2022-06-16T15:30:51.307609",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2022-06-16T15:30:41.091625",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
