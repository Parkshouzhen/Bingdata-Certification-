{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "09a90175",
   "metadata": {
    "papermill": {
     "duration": 0.021291,
     "end_time": "2022-05-18T06:36:34.065057",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.043766",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 결측치 처리\n",
    "-  주어진 데이터에서 결측치가 80%이상 되는 컬럼은(변수는) 삭제하고, 80% 미만인 결측치가 있는 컬럼은 'city'별 중앙값으로 값을 대체하고 'f1'컬럼의 평균값을 출력하세요!\n",
    "- 데이터셋 : basic1.csv 오른쪽 상단 copy&edit 클릭 -> 예상문제 풀이 시작\n",
    "- 강의 영상 : https://youtu.be/WqlpqBRn7x4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "cae4c3f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:34.111303Z",
     "iopub.status.busy": "2022-05-18T06:36:34.110062Z",
     "iopub.status.idle": "2022-05-18T06:36:34.168115Z",
     "shell.execute_reply": "2022-05-18T06:36:34.168704Z",
     "shell.execute_reply.started": "2022-05-18T06:09:18.267504Z"
    },
    "papermill": {
     "duration": 0.083541,
     "end_time": "2022-05-18T06:36:34.169083",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.085542",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>city</th>\n",
       "      <th>f1</th>\n",
       "      <th>f2</th>\n",
       "      <th>f3</th>\n",
       "      <th>f4</th>\n",
       "      <th>f5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>id01</td>\n",
       "      <td>2.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ENFJ</td>\n",
       "      <td>91.297791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>id02</td>\n",
       "      <td>9.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>70.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ENFJ</td>\n",
       "      <td>60.339826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>id03</td>\n",
       "      <td>27.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>61.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ISTJ</td>\n",
       "      <td>17.252986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>id04</td>\n",
       "      <td>75.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>INFP</td>\n",
       "      <td>52.667078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>id05</td>\n",
       "      <td>24.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>85.0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ISFJ</td>\n",
       "      <td>29.269869</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     id   age city    f1  f2   f3    f4         f5\n",
       "0  id01   2.0   서울   NaN   0  NaN  ENFJ  91.297791\n",
       "1  id02   9.0   서울  70.0   1  NaN  ENFJ  60.339826\n",
       "2  id03  27.0   서울  61.0   1  NaN  ISTJ  17.252986\n",
       "3  id04  75.0   서울   NaN   2  NaN  INFP  52.667078\n",
       "4  id05  24.0   서울  85.0   2  NaN  ISFJ  29.269869"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 라이브러리 및 데이터 불러오기\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "df = pd.read_csv('../input/bigdatacertificationkr/basic1.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0d73ab67",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:34.223160Z",
     "iopub.status.busy": "2022-05-18T06:36:34.217727Z",
     "iopub.status.idle": "2022-05-18T06:36:34.225746Z",
     "shell.execute_reply": "2022-05-18T06:36:34.226271Z",
     "shell.execute_reply.started": "2022-05-18T05:19:23.431844Z"
    },
    "papermill": {
     "duration": 0.033161,
     "end_time": "2022-05-18T06:36:34.226450",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.193289",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "id       0\n",
      "age      0\n",
      "city     0\n",
      "f1      31\n",
      "f2       0\n",
      "f3      95\n",
      "f4       0\n",
      "f5       0\n",
      "dtype: int64\n",
      "(100, 8)\n"
     ]
    }
   ],
   "source": [
    "# EDA - 결측값 확인(비율 확인)\n",
    "\n",
    "print(df.isnull().sum())\n",
    "print(df.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "90475bd5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:34.275675Z",
     "iopub.status.busy": "2022-05-18T06:36:34.274549Z",
     "iopub.status.idle": "2022-05-18T06:36:34.302390Z",
     "shell.execute_reply": "2022-05-18T06:36:34.302969Z",
     "shell.execute_reply.started": "2022-05-18T06:10:26.624282Z"
    },
    "papermill": {
     "duration": 0.053824,
     "end_time": "2022-05-18T06:36:34.303153",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.249329",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>city</th>\n",
       "      <th>f1</th>\n",
       "      <th>f2</th>\n",
       "      <th>f3</th>\n",
       "      <th>f4</th>\n",
       "      <th>f5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>id01</td>\n",
       "      <td>2.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ENFJ</td>\n",
       "      <td>91.297791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>id02</td>\n",
       "      <td>9.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>70.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ENFJ</td>\n",
       "      <td>60.339826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>id03</td>\n",
       "      <td>27.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>61.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ISTJ</td>\n",
       "      <td>17.252986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>id04</td>\n",
       "      <td>75.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>INFP</td>\n",
       "      <td>52.667078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>id05</td>\n",
       "      <td>24.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>85.0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ISFJ</td>\n",
       "      <td>29.269869</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>id96</td>\n",
       "      <td>92.0</td>\n",
       "      <td>경기</td>\n",
       "      <td>53.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ENTJ</td>\n",
       "      <td>52.667078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>id97</td>\n",
       "      <td>100.0</td>\n",
       "      <td>경기</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>INFP</td>\n",
       "      <td>67.886373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>id98</td>\n",
       "      <td>39.0</td>\n",
       "      <td>경기</td>\n",
       "      <td>58.0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>INFP</td>\n",
       "      <td>98.429899</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>id99</td>\n",
       "      <td>1.0</td>\n",
       "      <td>경기</td>\n",
       "      <td>47.0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ESFJ</td>\n",
       "      <td>97.381034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>id100</td>\n",
       "      <td>47.0</td>\n",
       "      <td>경기</td>\n",
       "      <td>53.0</td>\n",
       "      <td>0</td>\n",
       "      <td>vip</td>\n",
       "      <td>ESFP</td>\n",
       "      <td>33.308999</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       id    age city    f1  f2   f3    f4         f5\n",
       "0    id01    2.0   서울   NaN   0  NaN  ENFJ  91.297791\n",
       "1    id02    9.0   서울  70.0   1  NaN  ENFJ  60.339826\n",
       "2    id03   27.0   서울  61.0   1  NaN  ISTJ  17.252986\n",
       "3    id04   75.0   서울   NaN   2  NaN  INFP  52.667078\n",
       "4    id05   24.0   서울  85.0   2  NaN  ISFJ  29.269869\n",
       "..    ...    ...  ...   ...  ..  ...   ...        ...\n",
       "95   id96   92.0   경기  53.0   1  NaN  ENTJ  52.667078\n",
       "96   id97  100.0   경기   NaN   0  NaN  INFP  67.886373\n",
       "97   id98   39.0   경기  58.0   2  NaN  INFP  98.429899\n",
       "98   id99    1.0   경기  47.0   0  NaN  ESFJ  97.381034\n",
       "99  id100   47.0   경기  53.0   0  vip  ESFP  33.308999\n",
       "\n",
       "[100 rows x 8 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "20bca7f6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:34.351598Z",
     "iopub.status.busy": "2022-05-18T06:36:34.350559Z",
     "iopub.status.idle": "2022-05-18T06:36:34.355812Z",
     "shell.execute_reply": "2022-05-18T06:36:34.356378Z",
     "shell.execute_reply.started": "2022-05-18T06:15:03.829086Z"
    },
    "papermill": {
     "duration": 0.030699,
     "end_time": "2022-05-18T06:36:34.356551",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.325852",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(100, 8)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "98a5122d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:34.403691Z",
     "iopub.status.busy": "2022-05-18T06:36:34.403007Z",
     "iopub.status.idle": "2022-05-18T06:36:34.411090Z",
     "shell.execute_reply": "2022-05-18T06:36:34.411633Z",
     "shell.execute_reply.started": "2022-05-18T06:10:23.461668Z"
    },
    "papermill": {
     "duration": 0.033435,
     "end_time": "2022-05-18T06:36:34.411806",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.378371",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 80%이상 결측치 컬럼, 삭제\n",
    "df.drop(columns='f3', axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "21fe214d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:34.462280Z",
     "iopub.status.busy": "2022-05-18T06:36:34.461540Z",
     "iopub.status.idle": "2022-05-18T06:36:34.471891Z",
     "shell.execute_reply": "2022-05-18T06:36:34.472596Z",
     "shell.execute_reply.started": "2022-05-18T06:15:18.668597Z"
    },
    "papermill": {
     "duration": 0.036495,
     "end_time": "2022-05-18T06:36:34.472837",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.436342",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['서울', '부산', '대구', '경기'], dtype=object)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 80%미만 결측치 컬럼, city별 중앙값으로 대체\n",
    "df['city'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4305aac0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:34.527900Z",
     "iopub.status.busy": "2022-05-18T06:36:34.520616Z",
     "iopub.status.idle": "2022-05-18T06:36:34.530385Z",
     "shell.execute_reply": "2022-05-18T06:36:34.530860Z"
    },
    "papermill": {
     "duration": 0.035865,
     "end_time": "2022-05-18T06:36:34.531055",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.495190",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# city별 중앙값\n",
    "\n",
    "s = df[df['city']=='서울']['f1'].median()\n",
    "b = df[df['city']=='부산']['f1'].median()\n",
    "d = df[df['city']=='대구']['f1'].median()\n",
    "k = df[df['city']=='경기']['f1'].median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ff381cee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:34.586250Z",
     "iopub.status.busy": "2022-05-18T06:36:34.585493Z",
     "iopub.status.idle": "2022-05-18T06:36:34.588686Z",
     "shell.execute_reply": "2022-05-18T06:36:34.588180Z",
     "shell.execute_reply.started": "2022-05-18T06:22:43.836533Z"
    },
    "papermill": {
     "duration": 0.033391,
     "end_time": "2022-05-18T06:36:34.588829",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.555438",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# f1 평균값 결과 출력\n",
    "\n",
    "df['f1'].fillna(df['city'].map({'서울':s,'부산':b,'대구':d,'경기':k}), inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "844c6967",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:34.642300Z",
     "iopub.status.busy": "2022-05-18T06:36:34.641593Z",
     "iopub.status.idle": "2022-05-18T06:36:34.645077Z",
     "shell.execute_reply": "2022-05-18T06:36:34.645629Z",
     "shell.execute_reply.started": "2022-05-18T06:22:58.212555Z"
    },
    "papermill": {
     "duration": 0.032856,
     "end_time": "2022-05-18T06:36:34.645799",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.612943",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "65.52\n"
     ]
    }
   ],
   "source": [
    "print(df['f1'].mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "92ac6352",
   "metadata": {
    "papermill": {
     "duration": 0.022243,
     "end_time": "2022-05-18T06:36:34.691788",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.669545",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4432e801",
   "metadata": {
    "papermill": {
     "duration": 0.022044,
     "end_time": "2022-05-18T06:36:34.736360",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.714316",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "853f029c",
   "metadata": {
    "papermill": {
     "duration": 0.022562,
     "end_time": "2022-05-18T06:36:34.781296",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.758734",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "4fbfdbd4",
   "metadata": {
    "papermill": {
     "duration": 0.023068,
     "end_time": "2022-05-18T06:36:34.827375",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.804307",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Hint\n",
    "- city별 중앙값으로 대체에서는 map함수 활용"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b5f3323a",
   "metadata": {
    "papermill": {
     "duration": 0.023564,
     "end_time": "2022-05-18T06:36:34.873541",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.849977",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 풀이"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6a1aeae4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:34.926036Z",
     "iopub.status.busy": "2022-05-18T06:36:34.923442Z",
     "iopub.status.idle": "2022-05-18T06:36:34.943798Z",
     "shell.execute_reply": "2022-05-18T06:36:34.943246Z",
     "shell.execute_reply.started": "2021-11-16T13:12:20.604562Z"
    },
    "papermill": {
     "duration": 0.047231,
     "end_time": "2022-05-18T06:36:34.943961",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.896730",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>city</th>\n",
       "      <th>f1</th>\n",
       "      <th>f2</th>\n",
       "      <th>f3</th>\n",
       "      <th>f4</th>\n",
       "      <th>f5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>id01</td>\n",
       "      <td>2.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ENFJ</td>\n",
       "      <td>91.297791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>id02</td>\n",
       "      <td>9.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>70.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ENFJ</td>\n",
       "      <td>60.339826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>id03</td>\n",
       "      <td>27.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>61.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ISTJ</td>\n",
       "      <td>17.252986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>id04</td>\n",
       "      <td>75.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>INFP</td>\n",
       "      <td>52.667078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>id05</td>\n",
       "      <td>24.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>85.0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ISFJ</td>\n",
       "      <td>29.269869</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     id   age city    f1  f2   f3    f4         f5\n",
       "0  id01   2.0   서울   NaN   0  NaN  ENFJ  91.297791\n",
       "1  id02   9.0   서울  70.0   1  NaN  ENFJ  60.339826\n",
       "2  id03  27.0   서울  61.0   1  NaN  ISTJ  17.252986\n",
       "3  id04  75.0   서울   NaN   2  NaN  INFP  52.667078\n",
       "4  id05  24.0   서울  85.0   2  NaN  ISFJ  29.269869"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 라이브러리 및 데이터 불러오기\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "df = pd.read_csv('../input/bigdatacertificationkr/basic1.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f9915da9",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:34.999622Z",
     "iopub.status.busy": "2022-05-18T06:36:34.998938Z",
     "iopub.status.idle": "2022-05-18T06:36:35.002329Z",
     "shell.execute_reply": "2022-05-18T06:36:35.001682Z",
     "shell.execute_reply.started": "2021-11-16T13:12:20.646885Z"
    },
    "papermill": {
     "duration": 0.034604,
     "end_time": "2022-05-18T06:36:35.002470",
     "exception": false,
     "start_time": "2022-05-18T06:36:34.967866",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id       0\n",
       "age      0\n",
       "city     0\n",
       "f1      31\n",
       "f2       0\n",
       "f3      95\n",
       "f4       0\n",
       "f5       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# EDA - 결측값 확인\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7ff3e050",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:35.056253Z",
     "iopub.status.busy": "2022-05-18T06:36:35.055270Z",
     "iopub.status.idle": "2022-05-18T06:36:35.059394Z",
     "shell.execute_reply": "2022-05-18T06:36:35.059928Z",
     "shell.execute_reply.started": "2021-11-16T13:12:20.658708Z"
    },
    "papermill": {
     "duration": 0.032722,
     "end_time": "2022-05-18T06:36:35.060129",
     "exception": false,
     "start_time": "2022-05-18T06:36:35.027407",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(100, 8)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 데이터 shape\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d6934d36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:35.118593Z",
     "iopub.status.busy": "2022-05-18T06:36:35.117865Z",
     "iopub.status.idle": "2022-05-18T06:36:35.122730Z",
     "shell.execute_reply": "2022-05-18T06:36:35.122169Z",
     "shell.execute_reply.started": "2021-11-16T13:12:20.666565Z"
    },
    "papermill": {
     "duration": 0.038091,
     "end_time": "2022-05-18T06:36:35.122878",
     "exception": false,
     "start_time": "2022-05-18T06:36:35.084787",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id      0.00\n",
       "age     0.00\n",
       "city    0.00\n",
       "f1      0.31\n",
       "f2      0.00\n",
       "f3      0.95\n",
       "f4      0.00\n",
       "f5      0.00\n",
       "dtype: float64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# EDA - 결측비율 확인\n",
    "df.isnull().sum()/df.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4eb4ef2c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:35.179584Z",
     "iopub.status.busy": "2022-05-18T06:36:35.178874Z",
     "iopub.status.idle": "2022-05-18T06:36:35.182920Z",
     "shell.execute_reply": "2022-05-18T06:36:35.182251Z",
     "shell.execute_reply.started": "2021-11-16T13:12:20.684652Z"
    },
    "papermill": {
     "duration": 0.03538,
     "end_time": "2022-05-18T06:36:35.183082",
     "exception": false,
     "start_time": "2022-05-18T06:36:35.147702",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "삭제 전: (100, 8)\n",
      "삭제 후: (100, 7)\n"
     ]
    }
   ],
   "source": [
    "# f3 컬럼 삭제\n",
    "print(\"삭제 전:\", df.shape)\n",
    "df = df.drop(['f3'], axis=1)\n",
    "print(\"삭제 후:\", df.shape)\n",
    "\n",
    "# 결측치가 있는 컬럼을 제거하는 2가지 방법\n",
    "# df.drop(['B', 'C'], axis=1)\n",
    "# df.drop(columns=['B', 'C'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "c09450bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:35.239226Z",
     "iopub.status.busy": "2022-05-18T06:36:35.238512Z",
     "iopub.status.idle": "2022-05-18T06:36:35.243136Z",
     "shell.execute_reply": "2022-05-18T06:36:35.242526Z",
     "shell.execute_reply.started": "2021-11-16T13:12:46.466467Z"
    },
    "papermill": {
     "duration": 0.034769,
     "end_time": "2022-05-18T06:36:35.243279",
     "exception": false,
     "start_time": "2022-05-18T06:36:35.208510",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['서울', '부산', '대구', '경기'], dtype=object)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 도시 확인\n",
    "df['city'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "81d52896",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:35.304392Z",
     "iopub.status.busy": "2022-05-18T06:36:35.303640Z",
     "iopub.status.idle": "2022-05-18T06:36:35.307386Z",
     "shell.execute_reply": "2022-05-18T06:36:35.306751Z",
     "shell.execute_reply.started": "2021-11-16T13:12:20.715384Z"
    },
    "papermill": {
     "duration": 0.039445,
     "end_time": "2022-05-18T06:36:35.307527",
     "exception": false,
     "start_time": "2022-05-18T06:36:35.268082",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(68.0, 58.0, 62.0, 75.0)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 도시별 중앙값 계산\n",
    "s=df[df['city']=='서울']['f1'].median()\n",
    "k=df[df['city']=='경기']['f1'].median()\n",
    "b=df[df['city']=='부산']['f1'].median()\n",
    "d=df[df['city']=='대구']['f1'].median()\n",
    "s, k, b, d\n",
    "\n",
    "#방법2\n",
    "# k, d, b, s = df.groupby('city')['f1'].median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "aaa77ed1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:35.371568Z",
     "iopub.status.busy": "2022-05-18T06:36:35.370889Z",
     "iopub.status.idle": "2022-05-18T06:36:35.376017Z",
     "shell.execute_reply": "2022-05-18T06:36:35.375418Z",
     "shell.execute_reply.started": "2021-11-16T13:12:20.731771Z"
    },
    "papermill": {
     "duration": 0.043191,
     "end_time": "2022-05-18T06:36:35.376161",
     "exception": false,
     "start_time": "2022-05-18T06:36:35.332970",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>city</th>\n",
       "      <th>f1</th>\n",
       "      <th>f2</th>\n",
       "      <th>f4</th>\n",
       "      <th>f5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>id19</td>\n",
       "      <td>53.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>ISFP</td>\n",
       "      <td>83.685380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>id20</td>\n",
       "      <td>11.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>51.0</td>\n",
       "      <td>1</td>\n",
       "      <td>INTJ</td>\n",
       "      <td>91.297791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>id21</td>\n",
       "      <td>90.0</td>\n",
       "      <td>부산</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>ISFP</td>\n",
       "      <td>29.269869</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id   age city    f1  f2    f4         f5\n",
       "18  id19  53.0   서울   NaN   0  ISFP  83.685380\n",
       "19  id20  11.0   서울  51.0   1  INTJ  91.297791\n",
       "20  id21  90.0   부산   NaN   1  ISFP  29.269869"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 대체 전 데이터 샘플 출력\n",
    "df[18:21]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d0006fce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:35.434654Z",
     "iopub.status.busy": "2022-05-18T06:36:35.433976Z",
     "iopub.status.idle": "2022-05-18T06:36:35.437010Z",
     "shell.execute_reply": "2022-05-18T06:36:35.436491Z",
     "shell.execute_reply.started": "2021-11-16T13:12:20.751783Z"
    },
    "papermill": {
     "duration": 0.03531,
     "end_time": "2022-05-18T06:36:35.437165",
     "exception": false,
     "start_time": "2022-05-18T06:36:35.401855",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# f1결측치 city별 중앙값으로 대체\n",
    "df['f1'] = df['f1'].fillna(df['city'].map({'서울':s,'경기':k,'부산':b,'대구':d}))\n",
    "\n",
    "# 만약 그냥 f1 중앙값으로 대체 한다면 \n",
    "# df['f1'] = df['f1'].fillna(df['f1'].median())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8844e86b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:35.503261Z",
     "iopub.status.busy": "2022-05-18T06:36:35.502573Z",
     "iopub.status.idle": "2022-05-18T06:36:35.507288Z",
     "shell.execute_reply": "2022-05-18T06:36:35.507817Z",
     "shell.execute_reply.started": "2021-11-16T13:12:20.764397Z"
    },
    "papermill": {
     "duration": 0.04535,
     "end_time": "2022-05-18T06:36:35.508003",
     "exception": false,
     "start_time": "2022-05-18T06:36:35.462653",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>city</th>\n",
       "      <th>f1</th>\n",
       "      <th>f2</th>\n",
       "      <th>f4</th>\n",
       "      <th>f5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>id19</td>\n",
       "      <td>53.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>68.0</td>\n",
       "      <td>0</td>\n",
       "      <td>ISFP</td>\n",
       "      <td>83.685380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>id20</td>\n",
       "      <td>11.0</td>\n",
       "      <td>서울</td>\n",
       "      <td>51.0</td>\n",
       "      <td>1</td>\n",
       "      <td>INTJ</td>\n",
       "      <td>91.297791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>id21</td>\n",
       "      <td>90.0</td>\n",
       "      <td>부산</td>\n",
       "      <td>62.0</td>\n",
       "      <td>1</td>\n",
       "      <td>ISFP</td>\n",
       "      <td>29.269869</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id   age city    f1  f2    f4         f5\n",
       "18  id19  53.0   서울  68.0   0  ISFP  83.685380\n",
       "19  id20  11.0   서울  51.0   1  INTJ  91.297791\n",
       "20  id21  90.0   부산  62.0   1  ISFP  29.269869"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 대체 후 데이터 샘플 출력\n",
    "df[18:21]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "3b00f2b4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-05-18T06:36:35.567699Z",
     "iopub.status.busy": "2022-05-18T06:36:35.566943Z",
     "iopub.status.idle": "2022-05-18T06:36:35.570646Z",
     "shell.execute_reply": "2022-05-18T06:36:35.570085Z",
     "shell.execute_reply.started": "2021-11-16T13:12:20.778996Z"
    },
    "papermill": {
     "duration": 0.035248,
     "end_time": "2022-05-18T06:36:35.570815",
     "exception": false,
     "start_time": "2022-05-18T06:36:35.535567",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "65.52\n"
     ]
    }
   ],
   "source": [
    "#결과 출력\n",
    "print(df['f1'].mean())"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 11.795861,
   "end_time": "2022-05-18T06:36:36.867031",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2022-05-18T06:36:25.071170",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
