{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e2285560",
   "metadata": {
    "papermill": {
     "duration": 0.012214,
     "end_time": "2022-06-16T15:55:36.716929",
     "exception": false,
     "start_time": "2022-06-16T15:55:36.704715",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 2022년 5월 sales의 중앙값을 구하시오\n",
    "\n",
    "- 데이터셋 : basic2.csv \n",
    "- 오른쪽 상단 copy&edit 클릭 -> 예상문제 풀이 시작"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ae75d4b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:36.743718Z",
     "iopub.status.busy": "2022-06-16T15:55:36.742619Z",
     "iopub.status.idle": "2022-06-16T15:55:36.750418Z",
     "shell.execute_reply": "2022-06-16T15:55:36.750914Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.594356Z"
    },
    "papermill": {
     "duration": 0.021464,
     "end_time": "2022-06-16T15:55:36.751216",
     "exception": false,
     "start_time": "2022-06-16T15:55:36.729752",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "742867d1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:36.776885Z",
     "iopub.status.busy": "2022-06-16T15:55:36.776329Z",
     "iopub.status.idle": "2022-06-16T15:55:36.816046Z",
     "shell.execute_reply": "2022-06-16T15:55:36.816603Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.600160Z"
    },
    "papermill": {
     "duration": 0.055461,
     "end_time": "2022-06-16T15:55:36.816777",
     "exception": false,
     "start_time": "2022-06-16T15:55:36.761316",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Sales</th>\n",
       "      <th>PV</th>\n",
       "      <th>UV</th>\n",
       "      <th>Events</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-01-01</td>\n",
       "      <td>22711525</td>\n",
       "      <td>397349</td>\n",
       "      <td>4421.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-01-02</td>\n",
       "      <td>36779</td>\n",
       "      <td>3969</td>\n",
       "      <td>2289.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-01-03</td>\n",
       "      <td>13943875</td>\n",
       "      <td>373890</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-01-04</td>\n",
       "      <td>8088593</td>\n",
       "      <td>142054</td>\n",
       "      <td>2157.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-01-05</td>\n",
       "      <td>2395374</td>\n",
       "      <td>190684</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>725</th>\n",
       "      <td>2023-12-27</td>\n",
       "      <td>33846609</td>\n",
       "      <td>415067</td>\n",
       "      <td>7360.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>726</th>\n",
       "      <td>2023-12-28</td>\n",
       "      <td>3659566</td>\n",
       "      <td>208601</td>\n",
       "      <td>2262.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>727</th>\n",
       "      <td>2023-12-29</td>\n",
       "      <td>1164008</td>\n",
       "      <td>14309</td>\n",
       "      <td>193.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>728</th>\n",
       "      <td>2023-12-30</td>\n",
       "      <td>3977696</td>\n",
       "      <td>60935</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>729</th>\n",
       "      <td>2023-12-31</td>\n",
       "      <td>3719764</td>\n",
       "      <td>60963</td>\n",
       "      <td>1507.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>730 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Date     Sales      PV      UV  Events\n",
       "0    2022-01-01  22711525  397349  4421.0       1\n",
       "1    2022-01-02     36779    3969  2289.0       0\n",
       "2    2022-01-03  13943875  373890     NaN       1\n",
       "3    2022-01-04   8088593  142054  2157.0       0\n",
       "4    2022-01-05   2395374  190684     NaN       0\n",
       "..          ...       ...     ...     ...     ...\n",
       "725  2023-12-27  33846609  415067  7360.0       1\n",
       "726  2023-12-28   3659566  208601  2262.0       1\n",
       "727  2023-12-29   1164008   14309   193.0       0\n",
       "728  2023-12-30   3977696   60935     NaN       0\n",
       "729  2023-12-31   3719764   60963  1507.0       0\n",
       "\n",
       "[730 rows x 5 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('../input/bigdatacertificationkr/basic2.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b3eaacf6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:36.844236Z",
     "iopub.status.busy": "2022-06-16T15:55:36.843575Z",
     "iopub.status.idle": "2022-06-16T15:55:36.866399Z",
     "shell.execute_reply": "2022-06-16T15:55:36.866841Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.631951Z"
    },
    "papermill": {
     "duration": 0.03841,
     "end_time": "2022-06-16T15:55:36.867015",
     "exception": false,
     "start_time": "2022-06-16T15:55:36.828605",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sales</th>\n",
       "      <th>PV</th>\n",
       "      <th>UV</th>\n",
       "      <th>Events</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-01-01</th>\n",
       "      <td>22711525</td>\n",
       "      <td>397349</td>\n",
       "      <td>4421.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-02</th>\n",
       "      <td>36779</td>\n",
       "      <td>3969</td>\n",
       "      <td>2289.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-03</th>\n",
       "      <td>13943875</td>\n",
       "      <td>373890</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-04</th>\n",
       "      <td>8088593</td>\n",
       "      <td>142054</td>\n",
       "      <td>2157.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-05</th>\n",
       "      <td>2395374</td>\n",
       "      <td>190684</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-27</th>\n",
       "      <td>33846609</td>\n",
       "      <td>415067</td>\n",
       "      <td>7360.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-28</th>\n",
       "      <td>3659566</td>\n",
       "      <td>208601</td>\n",
       "      <td>2262.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-29</th>\n",
       "      <td>1164008</td>\n",
       "      <td>14309</td>\n",
       "      <td>193.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-30</th>\n",
       "      <td>3977696</td>\n",
       "      <td>60935</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-31</th>\n",
       "      <td>3719764</td>\n",
       "      <td>60963</td>\n",
       "      <td>1507.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>730 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Sales      PV      UV  Events\n",
       "Date                                        \n",
       "2022-01-01  22711525  397349  4421.0       1\n",
       "2022-01-02     36779    3969  2289.0       0\n",
       "2022-01-03  13943875  373890     NaN       1\n",
       "2022-01-04   8088593  142054  2157.0       0\n",
       "2022-01-05   2395374  190684     NaN       0\n",
       "...              ...     ...     ...     ...\n",
       "2023-12-27  33846609  415067  7360.0       1\n",
       "2023-12-28   3659566  208601  2262.0       1\n",
       "2023-12-29   1164008   14309   193.0       0\n",
       "2023-12-30   3977696   60935     NaN       0\n",
       "2023-12-31   3719764   60963  1507.0       0\n",
       "\n",
       "[730 rows x 4 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_5 = pd.read_csv('../input/bigdatacertificationkr/basic2.csv', index_col='Date', parse_dates=True)\n",
    "df_5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "acb1b177",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:36.894058Z",
     "iopub.status.busy": "2022-06-16T15:55:36.893443Z",
     "iopub.status.idle": "2022-06-16T15:55:36.924926Z",
     "shell.execute_reply": "2022-06-16T15:55:36.925414Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.653861Z"
    },
    "papermill": {
     "duration": 0.047413,
     "end_time": "2022-06-16T15:55:36.925593",
     "exception": false,
     "start_time": "2022-06-16T15:55:36.878180",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sales</th>\n",
       "      <th>PV</th>\n",
       "      <th>UV</th>\n",
       "      <th>Events</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-01-31</th>\n",
       "      <td>1632974.0</td>\n",
       "      <td>53467.0</td>\n",
       "      <td>1793.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-28</th>\n",
       "      <td>2861737.0</td>\n",
       "      <td>80178.0</td>\n",
       "      <td>2156.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-03-31</th>\n",
       "      <td>2746377.0</td>\n",
       "      <td>81529.0</td>\n",
       "      <td>1994.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-04-30</th>\n",
       "      <td>1755922.5</td>\n",
       "      <td>63565.5</td>\n",
       "      <td>1345.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-31</th>\n",
       "      <td>1477685.0</td>\n",
       "      <td>44101.0</td>\n",
       "      <td>1189.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-06-30</th>\n",
       "      <td>2760557.0</td>\n",
       "      <td>84664.0</td>\n",
       "      <td>2370.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-31</th>\n",
       "      <td>4363923.0</td>\n",
       "      <td>106228.0</td>\n",
       "      <td>2551.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-31</th>\n",
       "      <td>1134862.0</td>\n",
       "      <td>31603.0</td>\n",
       "      <td>1094.5</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-09-30</th>\n",
       "      <td>2712412.5</td>\n",
       "      <td>82094.5</td>\n",
       "      <td>2439.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10-31</th>\n",
       "      <td>1946000.0</td>\n",
       "      <td>74604.0</td>\n",
       "      <td>1899.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11-30</th>\n",
       "      <td>707769.0</td>\n",
       "      <td>44082.5</td>\n",
       "      <td>1369.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-31</th>\n",
       "      <td>2789813.0</td>\n",
       "      <td>96309.0</td>\n",
       "      <td>1793.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-01-31</th>\n",
       "      <td>2340951.0</td>\n",
       "      <td>47695.0</td>\n",
       "      <td>1393.5</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-02-28</th>\n",
       "      <td>4709395.5</td>\n",
       "      <td>94224.5</td>\n",
       "      <td>1853.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-03-31</th>\n",
       "      <td>5877821.0</td>\n",
       "      <td>89711.0</td>\n",
       "      <td>3037.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-30</th>\n",
       "      <td>1942895.5</td>\n",
       "      <td>50753.0</td>\n",
       "      <td>1441.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-31</th>\n",
       "      <td>2463381.0</td>\n",
       "      <td>89066.0</td>\n",
       "      <td>2090.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-06-30</th>\n",
       "      <td>1501092.5</td>\n",
       "      <td>76000.0</td>\n",
       "      <td>1319.5</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-31</th>\n",
       "      <td>3149219.0</td>\n",
       "      <td>61908.0</td>\n",
       "      <td>1692.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-08-31</th>\n",
       "      <td>2573435.0</td>\n",
       "      <td>80454.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-09-30</th>\n",
       "      <td>4207230.0</td>\n",
       "      <td>103917.5</td>\n",
       "      <td>1964.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-10-31</th>\n",
       "      <td>3234766.0</td>\n",
       "      <td>67874.0</td>\n",
       "      <td>1564.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-11-30</th>\n",
       "      <td>3118259.0</td>\n",
       "      <td>66375.0</td>\n",
       "      <td>2031.5</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-31</th>\n",
       "      <td>2799451.0</td>\n",
       "      <td>60935.0</td>\n",
       "      <td>1369.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Sales        PV      UV  Events\n",
       "Date                                           \n",
       "2022-01-31  1632974.0   53467.0  1793.0     0.0\n",
       "2022-02-28  2861737.0   80178.0  2156.0     0.0\n",
       "2022-03-31  2746377.0   81529.0  1994.0     0.0\n",
       "2022-04-30  1755922.5   63565.5  1345.0     0.0\n",
       "2022-05-31  1477685.0   44101.0  1189.0     0.0\n",
       "2022-06-30  2760557.0   84664.0  2370.0     0.0\n",
       "2022-07-31  4363923.0  106228.0  2551.0     0.0\n",
       "2022-08-31  1134862.0   31603.0  1094.5     0.0\n",
       "2022-09-30  2712412.5   82094.5  2439.0     0.0\n",
       "2022-10-31  1946000.0   74604.0  1899.0     0.0\n",
       "2022-11-30   707769.0   44082.5  1369.0     0.0\n",
       "2022-12-31  2789813.0   96309.0  1793.0     0.0\n",
       "2023-01-31  2340951.0   47695.0  1393.5     0.0\n",
       "2023-02-28  4709395.5   94224.5  1853.0     0.0\n",
       "2023-03-31  5877821.0   89711.0  3037.0     0.0\n",
       "2023-04-30  1942895.5   50753.0  1441.0     0.0\n",
       "2023-05-31  2463381.0   89066.0  2090.0     0.0\n",
       "2023-06-30  1501092.5   76000.0  1319.5     0.0\n",
       "2023-07-31  3149219.0   61908.0  1692.0     0.0\n",
       "2023-08-31  2573435.0   80454.0  2020.0     0.0\n",
       "2023-09-30  4207230.0  103917.5  1964.0     0.0\n",
       "2023-10-31  3234766.0   67874.0  1564.0     0.0\n",
       "2023-11-30  3118259.0   66375.0  2031.5     0.0\n",
       "2023-12-31  2799451.0   60935.0  1369.0     0.0"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_5 = df_5.resample('M').median()\n",
    "df_5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "67bb4027",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:36.953471Z",
     "iopub.status.busy": "2022-06-16T15:55:36.952805Z",
     "iopub.status.idle": "2022-06-16T15:55:36.957539Z",
     "shell.execute_reply": "2022-06-16T15:55:36.958075Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.682300Z"
    },
    "papermill": {
     "duration": 0.020835,
     "end_time": "2022-06-16T15:55:36.958241",
     "exception": false,
     "start_time": "2022-06-16T15:55:36.937406",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1477685.0\n"
     ]
    }
   ],
   "source": [
    "print(df_5.iloc[4][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e8fcc35c",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:36.985724Z",
     "iopub.status.busy": "2022-06-16T15:55:36.984195Z",
     "iopub.status.idle": "2022-06-16T15:55:36.987587Z",
     "shell.execute_reply": "2022-06-16T15:55:36.988111Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.688301Z"
    },
    "papermill": {
     "duration": 0.018352,
     "end_time": "2022-06-16T15:55:36.988329",
     "exception": false,
     "start_time": "2022-06-16T15:55:36.969977",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 라이브러리 불러오기\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "20ff58e2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:37.015345Z",
     "iopub.status.busy": "2022-06-16T15:55:37.014716Z",
     "iopub.status.idle": "2022-06-16T15:55:37.022174Z",
     "shell.execute_reply": "2022-06-16T15:55:37.022720Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.700951Z"
    },
    "papermill": {
     "duration": 0.022606,
     "end_time": "2022-06-16T15:55:37.022904",
     "exception": false,
     "start_time": "2022-06-16T15:55:37.000298",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 데이터 불러오기\n",
    "df = pd.read_csv(\"../input/bigdatacertificationkr/basic2.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9ca9357e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:37.054296Z",
     "iopub.status.busy": "2022-06-16T15:55:37.053097Z",
     "iopub.status.idle": "2022-06-16T15:55:37.067927Z",
     "shell.execute_reply": "2022-06-16T15:55:37.067190Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.717202Z"
    },
    "papermill": {
     "duration": 0.03334,
     "end_time": "2022-06-16T15:55:37.068127",
     "exception": false,
     "start_time": "2022-06-16T15:55:37.034787",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Sales</th>\n",
       "      <th>PV</th>\n",
       "      <th>UV</th>\n",
       "      <th>Events</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-01-01</td>\n",
       "      <td>22711525</td>\n",
       "      <td>397349</td>\n",
       "      <td>4421.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-01-02</td>\n",
       "      <td>36779</td>\n",
       "      <td>3969</td>\n",
       "      <td>2289.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-01-03</td>\n",
       "      <td>13943875</td>\n",
       "      <td>373890</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-01-04</td>\n",
       "      <td>8088593</td>\n",
       "      <td>142054</td>\n",
       "      <td>2157.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-01-05</td>\n",
       "      <td>2395374</td>\n",
       "      <td>190684</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date     Sales      PV      UV  Events\n",
       "0  2022-01-01  22711525  397349  4421.0       1\n",
       "1  2022-01-02     36779    3969  2289.0       0\n",
       "2  2022-01-03  13943875  373890     NaN       1\n",
       "3  2022-01-04   8088593  142054  2157.0       0\n",
       "4  2022-01-05   2395374  190684     NaN       0"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b254333c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:37.099147Z",
     "iopub.status.busy": "2022-06-16T15:55:37.098569Z",
     "iopub.status.idle": "2022-06-16T15:55:37.116510Z",
     "shell.execute_reply": "2022-06-16T15:55:37.117372Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.734625Z"
    },
    "papermill": {
     "duration": 0.03479,
     "end_time": "2022-06-16T15:55:37.117611",
     "exception": false,
     "start_time": "2022-06-16T15:55:37.082821",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 730 entries, 0 to 729\n",
      "Data columns (total 5 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   Date    730 non-null    object \n",
      " 1   Sales   730 non-null    int64  \n",
      " 2   PV      730 non-null    int64  \n",
      " 3   UV      684 non-null    float64\n",
      " 4   Events  730 non-null    int64  \n",
      "dtypes: float64(1), int64(3), object(1)\n",
      "memory usage: 28.6+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d4bbe4fb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:37.158601Z",
     "iopub.status.busy": "2022-06-16T15:55:37.154072Z",
     "iopub.status.idle": "2022-06-16T15:55:37.163240Z",
     "shell.execute_reply": "2022-06-16T15:55:37.163756Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.751658Z"
    },
    "papermill": {
     "duration": 0.032524,
     "end_time": "2022-06-16T15:55:37.163924",
     "exception": false,
     "start_time": "2022-06-16T15:55:37.131400",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 730 entries, 0 to 729\n",
      "Data columns (total 5 columns):\n",
      " #   Column  Non-Null Count  Dtype         \n",
      "---  ------  --------------  -----         \n",
      " 0   Date    730 non-null    datetime64[ns]\n",
      " 1   Sales   730 non-null    int64         \n",
      " 2   PV      730 non-null    int64         \n",
      " 3   UV      684 non-null    float64       \n",
      " 4   Events  730 non-null    int64         \n",
      "dtypes: datetime64[ns](1), float64(1), int64(3)\n",
      "memory usage: 28.6 KB\n"
     ]
    }
   ],
   "source": [
    "# datetime으로 type변경\n",
    "df['Date'] = pd.to_datetime(df['Date'])\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9ecba8d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:37.197898Z",
     "iopub.status.busy": "2022-06-16T15:55:37.196859Z",
     "iopub.status.idle": "2022-06-16T15:55:37.203605Z",
     "shell.execute_reply": "2022-06-16T15:55:37.203053Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.777378Z"
    },
    "papermill": {
     "duration": 0.025061,
     "end_time": "2022-06-16T15:55:37.203742",
     "exception": false,
     "start_time": "2022-06-16T15:55:37.178681",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 새로운 컬럼 추가 (년, 월, 일)\n",
    "df['year'] = df['Date'].dt.year\n",
    "df['month'] = df['Date'].dt.month\n",
    "df['day'] = df['Date'].dt.day"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3c925fc7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:37.240194Z",
     "iopub.status.busy": "2022-06-16T15:55:37.236753Z",
     "iopub.status.idle": "2022-06-16T15:55:37.243268Z",
     "shell.execute_reply": "2022-06-16T15:55:37.243773Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.788171Z"
    },
    "papermill": {
     "duration": 0.027366,
     "end_time": "2022-06-16T15:55:37.243944",
     "exception": false,
     "start_time": "2022-06-16T15:55:37.216578",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Sales</th>\n",
       "      <th>PV</th>\n",
       "      <th>UV</th>\n",
       "      <th>Events</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-01-01</td>\n",
       "      <td>22711525</td>\n",
       "      <td>397349</td>\n",
       "      <td>4421.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2022</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-01-02</td>\n",
       "      <td>36779</td>\n",
       "      <td>3969</td>\n",
       "      <td>2289.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2022</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-01-03</td>\n",
       "      <td>13943875</td>\n",
       "      <td>373890</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2022</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-01-04</td>\n",
       "      <td>8088593</td>\n",
       "      <td>142054</td>\n",
       "      <td>2157.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2022</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-01-05</td>\n",
       "      <td>2395374</td>\n",
       "      <td>190684</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>2022</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Date     Sales      PV      UV  Events  year  month  day\n",
       "0 2022-01-01  22711525  397349  4421.0       1  2022      1    1\n",
       "1 2022-01-02     36779    3969  2289.0       0  2022      1    2\n",
       "2 2022-01-03  13943875  373890     NaN       1  2022      1    3\n",
       "3 2022-01-04   8088593  142054  2157.0       0  2022      1    4\n",
       "4 2022-01-05   2395374  190684     NaN       0  2022      1    5"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f4615e18",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-16T15:55:37.273054Z",
     "iopub.status.busy": "2022-06-16T15:55:37.272481Z",
     "iopub.status.idle": "2022-06-16T15:55:37.279107Z",
     "shell.execute_reply": "2022-06-16T15:55:37.279792Z",
     "shell.execute_reply.started": "2022-06-16T15:54:38.806726Z"
    },
    "papermill": {
     "duration": 0.022823,
     "end_time": "2022-06-16T15:55:37.280017",
     "exception": false,
     "start_time": "2022-06-16T15:55:37.257194",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1477685.0\n"
     ]
    }
   ],
   "source": [
    "# 문제 조건에 맞는 값 구하기\n",
    "cond = (df['year']==2022) & (df['month']==5)\n",
    "print(df[cond]['Sales'].median())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "81a1af7d",
   "metadata": {
    "papermill": {
     "duration": 0.01284,
     "end_time": "2022-06-16T15:55:37.307044",
     "exception": false,
     "start_time": "2022-06-16T15:55:37.294204",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6c0d73a8",
   "metadata": {
    "papermill": {
     "duration": 0.012824,
     "end_time": "2022-06-16T15:55:37.333060",
     "exception": false,
     "start_time": "2022-06-16T15:55:37.320236",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 9.803778,
   "end_time": "2022-06-16T15:55:37.958673",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2022-06-16T15:55:28.154895",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
